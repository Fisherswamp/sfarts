!function(t){function e(e){for(var s,Q,c=e[0],g=e[1],i=e[2],B=0,l=[];B<c.length;B++)Q=c[B],Object.prototype.hasOwnProperty.call(I,Q)&&I[Q]&&l.push(I[Q][0]),I[Q]=0;for(s in g)Object.prototype.hasOwnProperty.call(g,s)&&(t[s]=g[s]);for(F&&F(e);l.length;)l.shift()();return C.push.apply(C,i||[]),n()}function n(){for(var t,e=0;e<C.length;e++){for(var n=C[e],s=!0,c=1;c<n.length;c++){var g=n[c];0!==I[g]&&(s=!1)}s&&(C.splice(e--,1),t=Q(Q.s=n[0]))}return t}var s={},I={0:0},C=[];function Q(e){if(s[e])return s[e].exports;var n=s[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,Q),n.l=!0,n.exports}Q.m=t,Q.c=s,Q.d=function(t,e,n){Q.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},Q.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},Q.t=function(t,e){if(1&e&&(t=Q(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(Q.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)Q.d(n,s,function(e){return t[e]}.bind(null,s));return n},Q.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return Q.d(e,"a",e),e},Q.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},Q.p="";var c=window.webpackJsonp=window.webpackJsonp||[],g=c.push.bind(c);c.push=e,c=c.slice();for(var i=0;i<c.length;i++)e(c[i]);var F=g;C.push([101,1]),n()}({101:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(1);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(52);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/socket.io-client/lib/index.js\nvar lib = __webpack_require__(53);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// CONCATENATED MODULE: ./src/shared/communication/messageEnum.ts\nvar MessageEnum;\n\n(function (MessageEnum) {\n  MessageEnum["CREATE_ACCOUNT"] = "create";\n  MessageEnum["LOGIN"] = "login";\n  MessageEnum["DISCONNECT"] = "disconnect";\n  MessageEnum["ERROR"] = "error";\n  MessageEnum["CONNECT"] = "connect";\n  MessageEnum["GET_LOBBIES"] = "get lobbies";\n  MessageEnum["JOIN_LOBBY"] = "join lobby";\n  MessageEnum["CREATE_LOBBY"] = "create lobby";\n  MessageEnum["START_GAME"] = "start game";\n  MessageEnum["PLAYER_INPUT"] = "player input";\n  MessageEnum["END_TURN_SIGNAL"] = "end turn? maybe idk dude";\n  MessageEnum["GET_TIME_REMAINING"] = "how much time is remaining bro";\n  MessageEnum["RESET_PLAYER_MOVES"] = "undo that shit bro i fucked up";\n  MessageEnum["CONCEDE"] = "i give in!!!!";\n  MessageEnum["GAME_HAS_ENDED"] = "game over gg wp no re";\n})(MessageEnum || (MessageEnum = {}));\n\n/* harmony default export */ var messageEnum = (MessageEnum);\n// CONCATENATED MODULE: ./src/shared/config/constants.ts\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Constants = function Constants() {\n  _classCallCheck(this, Constants);\n};\n\n_defineProperty(Constants, "DEFAULT_PORT", 9911);\n\n_defineProperty(Constants, "URL", "http://localhost:".concat(Constants.DEFAULT_PORT));\n\n_defineProperty(Constants, "HOSTED_URL", "https://evilte.ch");\n\n\n// CONCATENATED MODULE: ./src/shared/communication/messageInterfaces/loginMessage.ts\nvar LoginMessageResponseType;\n\n(function (LoginMessageResponseType) {\n  LoginMessageResponseType[LoginMessageResponseType["SUCCESS"] = 0] = "SUCCESS";\n  LoginMessageResponseType[LoginMessageResponseType["USER_NOT_EXIST"] = 1] = "USER_NOT_EXIST";\n  LoginMessageResponseType[LoginMessageResponseType["PASSWORD_INCORRECT"] = 2] = "PASSWORD_INCORRECT";\n})(LoginMessageResponseType || (LoginMessageResponseType = {}));\n// CONCATENATED MODULE: ./src/shared/utility/logger.ts\nvar LOG_LEVEL;\n\n(function (LOG_LEVEL) {\n  LOG_LEVEL[LOG_LEVEL["TRACE"] = 0] = "TRACE";\n  LOG_LEVEL[LOG_LEVEL["DEBUG"] = 1] = "DEBUG";\n  LOG_LEVEL[LOG_LEVEL["INFO"] = 2] = "INFO";\n  LOG_LEVEL[LOG_LEVEL["WARN"] = 3] = "WARN";\n  LOG_LEVEL[LOG_LEVEL["ERROR"] = 4] = "ERROR";\n})(LOG_LEVEL || (LOG_LEVEL = {}));\n\nvar log = function log(message, className, logLevel) {\n  var output = "".concat(className || "LOGGER", ".").concat(LOG_LEVEL[logLevel] || "ANY", " [").concat(new Date().toLocaleTimeString(), "]: ").concat(message);\n  console.log(output);\n};\n\n/* harmony default export */ var logger = (log);\n// CONCATENATED MODULE: ./src/shared/game/units/unitStats.ts\nvar copyStats = function copyStats(stats) {\n  return {\n    moveSpeed: stats.moveSpeed,\n    movesRemaining: stats.movesRemaining,\n    maxHealth: stats.maxHealth,\n    health: stats.health,\n    damage: stats.damage,\n    range: stats.range\n  };\n};\n// CONCATENATED MODULE: ./src/shared/game/units/gameUnit.ts\nfunction gameUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction gameUnit_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar gameUnit_GameUnit = /*#__PURE__*/function () {\n  function GameUnit(controller, team, unitStats, specialMoves, location, name) {\n    gameUnit_classCallCheck(this, GameUnit);\n\n    gameUnit_defineProperty(this, "unitStats", void 0);\n\n    gameUnit_defineProperty(this, "controller", void 0);\n\n    gameUnit_defineProperty(this, "specialMoves", void 0);\n\n    gameUnit_defineProperty(this, "specialsUsed", void 0);\n\n    gameUnit_defineProperty(this, "location", void 0);\n\n    gameUnit_defineProperty(this, "turnStartLocation", void 0);\n\n    gameUnit_defineProperty(this, "team", void 0);\n\n    gameUnit_defineProperty(this, "name", void 0);\n\n    this.unitStats = copyStats(unitStats);\n    this.controller = controller;\n    this.team = team;\n    this.specialMoves = specialMoves;\n    this.specialsUsed = [];\n    this.location = location;\n    this.turnStartLocation = {\n      x: location.x,\n      y: location.y\n    };\n    this.name = name;\n  }\n\n  _createClass(GameUnit, [{\n    key: "useSpecialAction",\n    value: function useSpecialAction(special) {\n      this.specialsUsed.push(special);\n    }\n  }, {\n    key: "canUseSpecial",\n    value: function canUseSpecial(special) {\n      return !this.specialsUsed.includes(special);\n    }\n  }, {\n    key: "useMovesTo",\n    value: function useMovesTo(moveAmount, location) {\n      this.unitStats.movesRemaining -= moveAmount;\n      this.location = {\n        x: location.x,\n        y: location.y\n      };\n    }\n  }, {\n    key: "processNewTurn",\n    value: function processNewTurn() {\n      this.turnStartLocation = {\n        x: this.location.x,\n        y: this.location.y\n      };\n      this.unitStats.movesRemaining = this.unitStats.moveSpeed;\n      this.specialsUsed = [];\n    }\n  }]);\n\n  return GameUnit;\n}();\n\n\n// CONCATENATED MODULE: ./src/shared/game/move/moveHistory.ts\nfunction moveHistory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction moveHistory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction moveHistory_createClass(Constructor, protoProps, staticProps) { if (protoProps) moveHistory_defineProperties(Constructor.prototype, protoProps); if (staticProps) moveHistory_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction moveHistory_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar MoveHistory = /*#__PURE__*/function () {\n  function MoveHistory(players) {\n    moveHistory_classCallCheck(this, MoveHistory);\n\n    moveHistory_defineProperty(this, "history", void 0);\n\n    this.history = [{}];\n  }\n\n  moveHistory_createClass(MoveHistory, [{\n    key: "playerMove",\n    value: function playerMove(playerId, move) {\n      this.verifyPlayerAndAction(playerId, move);\n      var currentTurn = this.history[this.history.length - 1];\n      var locationKey = this.locationToString(move.unitDoingAction.turnStartLocation);\n      var currentMoveAction = currentTurn[playerId][locationKey].moveAction;\n\n      if (currentMoveAction) {\n        currentMoveAction.targetedCoordinates = move.targetedCoordinates;\n      } else {\n        currentTurn[playerId][locationKey].moveAction = move;\n      }\n    }\n  }, {\n    key: "playerSpecial",\n    value: function playerSpecial(playerId, special) {\n      this.verifyPlayerAndAction(playerId, special);\n      var currentTurn = this.history[this.history.length - 1];\n      var locationKey = this.locationToString(special.unitDoingAction.turnStartLocation);\n      currentTurn[playerId][locationKey].specialAction = special;\n    }\n  }, {\n    key: "resetPlayerMoves",\n    value: function resetPlayerMoves(playerId) {\n      var currentTurn = this.history[this.history.length - 1];\n      currentTurn[playerId] = {};\n    }\n  }, {\n    key: "saveAndGetTurnHistory",\n    value: function saveAndGetTurnHistory() {\n      var currentTurn = this.history[this.history.length - 1];\n      this.history.push({});\n      return currentTurn;\n    }\n  }, {\n    key: "verifyPlayerAndAction",\n    value: function verifyPlayerAndAction(playerId, move) {\n      var currentTurn = this.history[this.history.length - 1];\n      var playerActions = currentTurn[playerId];\n      var locationKey = this.locationToString(move.unitDoingAction.turnStartLocation);\n\n      if (!playerActions) {\n        currentTurn[playerId] = moveHistory_defineProperty({}, locationKey, {\n          moveAction: null,\n          specialAction: null\n        });\n      } else if (!playerActions[locationKey]) {\n        currentTurn[playerId][locationKey] = {\n          moveAction: null,\n          specialAction: null\n        };\n      }\n    }\n  }, {\n    key: "locationToString",\n    value: function locationToString(location) {\n      return "".concat(location.x, ", ").concat(location.y);\n    }\n  }]);\n\n  return MoveHistory;\n}();\n\n\n// CONCATENATED MODULE: ./src/shared/game/move/specialAction.ts\nvar SpecialActionName;\n\n(function (SpecialActionName) {\n  SpecialActionName[SpecialActionName["ATTACK"] = 0] = "ATTACK";\n})(SpecialActionName || (SpecialActionName = {}));\n// CONCATENATED MODULE: ./src/shared/utility/convertToString.ts\nvar locationToString = function locationToString(location) {\n  return "".concat(location.x, ", ").concat(location.y);\n};\n\n/* harmony default export */ var convertToString = (locationToString);\n// CONCATENATED MODULE: ./src/shared/game/manager/gameManager.ts\nfunction gameManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction gameManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction gameManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) gameManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) gameManager_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction gameManager_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar gameManager_GameManager = /*#__PURE__*/function () {\n  function GameManager(gameId, controllerId, allPlayers, boardState) {\n    gameManager_classCallCheck(this, GameManager);\n\n    gameManager_defineProperty(this, "gameId", void 0);\n\n    gameManager_defineProperty(this, "controllerId", void 0);\n\n    gameManager_defineProperty(this, "board", void 0);\n\n    gameManager_defineProperty(this, "boardState", void 0);\n\n    gameManager_defineProperty(this, "moveHistory", void 0);\n\n    gameManager_defineProperty(this, "playerIds", void 0);\n\n    gameManager_defineProperty(this, "endedTurnMap", void 0);\n\n    this.gameId = gameId;\n    this.controllerId = controllerId;\n\n    if (boardState) {\n      this.boardState = boardState;\n    } else {\n      this.boardState = new Array(5);\n    }\n\n    this.moveHistory = new MoveHistory(allPlayers);\n    this.playerIds = allPlayers;\n    this.endedTurnMap = new Set();\n  }\n\n  gameManager_createClass(GameManager, [{\n    key: "copyBoardState",\n    value: function copyBoardState(boardState) {\n      this.boardState = [];\n\n      for (var y = 0; y < boardState.length; y++) {\n        this.boardState.push([]);\n\n        for (var x = 0; x < boardState[y].length; x++) {\n          var oldGameUnit = boardState[y][x];\n\n          if (oldGameUnit) {\n            this.boardState[y].push(new gameUnit_GameUnit(oldGameUnit.controller, oldGameUnit.team, oldGameUnit.unitStats, oldGameUnit.specialMoves, oldGameUnit.location, oldGameUnit.name));\n          } else {\n            this.boardState[y].push(null);\n          }\n        }\n      }\n    }\n  }, {\n    key: "addMovesForPlayer",\n    value: function addMovesForPlayer(playerId, moveList) {\n      var _this = this;\n\n      moveList.forEach(function (move) {\n        _this.moveHistory.playerMove(playerId, move);\n      });\n    }\n  }, {\n    key: "addSpecialsForPlayer",\n    value: function addSpecialsForPlayer(playerId, specialList) {\n      var _this2 = this;\n\n      specialList.forEach(function (special) {\n        _this2.moveHistory.playerSpecial(playerId, special);\n      });\n    }\n  }, {\n    key: "getNumTurns",\n    value: function getNumTurns() {\n      return this.moveHistory.history.length;\n    }\n  }, {\n    key: "playerSendsEndTurnSignal",\n    value: function playerSendsEndTurnSignal(playerId, endTurn) {\n      if (endTurn) {\n        this.endedTurnMap.add(playerId);\n      } else {\n        this.endedTurnMap["delete"](playerId);\n      }\n    }\n  }, {\n    key: "allPlayersHaveEndedTurn",\n    value: function allPlayersHaveEndedTurn() {\n      return this.endedTurnMap.size == this.playerIds.length;\n    }\n  }, {\n    key: "endTurn",\n    value: function endTurn() {\n      var _this3 = this;\n\n      // Do Specials **FIRST** and then moves\n      var turnHistory = this.moveHistory.saveAndGetTurnHistory();\n      Object.keys(turnHistory).forEach(function (playerId) {\n        var playerIdNum = parseInt(playerId);\n        Object.keys(turnHistory[playerIdNum]).forEach(function (locationKey) {\n          _this3.doSpecial(turnHistory[playerIdNum][locationKey].specialAction);\n        });\n      });\n      Object.keys(turnHistory).forEach(function (playerId) {\n        var playerIdNum = parseInt(playerId);\n        Object.keys(turnHistory[playerIdNum]).forEach(function (locationKey) {\n          var moveAction = turnHistory[playerIdNum][locationKey].moveAction;\n\n          if (moveAction) {\n            var unitDoingAction = _this3.getUnitAt(moveAction.unitDoingAction.turnStartLocation); // copy over health and stuff\n\n\n            _this3.moveUnit(unitDoingAction, unitDoingAction.turnStartLocation, moveAction.targetedCoordinates);\n          }\n        });\n      }); // copy over own boardstate because passed in objects lose their functions\n      // TODO: fix this feature in the server so this inefficiency does not have to happen\n\n      this.copyBoardState(this.boardState);\n      this.boardState.forEach(function (row, rowIdx) {\n        row.forEach(function (gameUnit, colIdx) {\n          if (gameUnit) {\n            if (gameUnit.unitStats.health <= 0) {\n              _this3.setUnitAt({\n                x: colIdx,\n                y: rowIdx\n              }, null);\n            } else {\n              gameUnit.processNewTurn();\n            }\n          }\n        }, _this3);\n      }, this);\n      this.endedTurnMap.clear();\n    }\n  }, {\n    key: "resetPlayerMoves",\n    value: function resetPlayerMoves(playerId) {\n      this.moveHistory.resetPlayerMoves(playerId);\n      return this.boardState;\n    }\n  }, {\n    key: "getUnitAt",\n    value: function getUnitAt(location) {\n      if (location && this.boardState[location.y]) {\n        return this.boardState[location.y][location.x];\n      }\n\n      return null;\n    }\n  }, {\n    key: "setUnitAt",\n    value: function setUnitAt(location, unit) {\n      this.boardState[location.y][location.x] = unit;\n    }\n  }, {\n    key: "moveUnit",\n    value: function moveUnit(unitMoving, oldLocation, newLocation) {\n      if (unitMoving.turnStartLocation != oldLocation) {\n        logger("".concat(convertToString(unitMoving.turnStartLocation), " is not equal to ").concat(convertToString(oldLocation)), this.constructor.name, LOG_LEVEL.ERROR);\n      } else {\n        this.setUnitAt(oldLocation, null);\n        var newLocationUnit = this.getUnitAt(newLocation);\n\n        if (newLocationUnit) {\n          if (newLocationUnit.team == unitMoving.team) {\n            logger("".concat(unitMoving, " is on the same team (").concat(unitMoving.team, ") as ").concat(newLocationUnit), this.constructor.name, LOG_LEVEL.ERROR);\n          } else {\n            // Smash Health\n            var higherHealthUnit = newLocationUnit.unitStats.health > unitMoving.unitStats.health ? newLocationUnit : unitMoving;\n            var lowerHealth = Math.min(newLocationUnit.unitStats.health, unitMoving.unitStats.health);\n            higherHealthUnit.unitStats.health -= lowerHealth;\n            this.setUnitAt(newLocation, higherHealthUnit);\n            unitMoving.location = newLocation;\n          }\n        } else {\n          this.setUnitAt(newLocation, unitMoving);\n          unitMoving.location = newLocation;\n        }\n      }\n    }\n  }, {\n    key: "doSpecial",\n    value: function doSpecial(action) {\n      if (!action) {\n        return;\n      }\n\n      if (action.actionName == SpecialActionName.ATTACK) {\n        var _action$unitDoingActi, _action$unitDoingActi2, _action$unitDoingActi3;\n\n        var unitAttacking = this.getUnitAt((_action$unitDoingActi = action.unitDoingAction) === null || _action$unitDoingActi === void 0 ? void 0 : _action$unitDoingActi.turnStartLocation);\n\n        if (((_action$unitDoingActi2 = action.unitDoingAction) === null || _action$unitDoingActi2 === void 0 ? void 0 : (_action$unitDoingActi3 = _action$unitDoingActi2.unitStats) === null || _action$unitDoingActi3 === void 0 ? void 0 : _action$unitDoingActi3.damage) != (unitAttacking === null || unitAttacking === void 0 ? void 0 : unitAttacking.unitStats.damage)) {\n          logger("ERROR: Damage is not consistent, likely refering to different gameobjects or something is incorrectly null", this.constructor.name, LOG_LEVEL.WARN);\n        } else {\n          var unitBeingAttacked = this.getUnitAt(action.targetedCoordinates);\n\n          if (!unitBeingAttacked || (unitAttacking === null || unitAttacking === void 0 ? void 0 : unitAttacking.controller) == (unitBeingAttacked === null || unitBeingAttacked === void 0 ? void 0 : unitBeingAttacked.controller)) {\n            logger("ERROR: unit is attacking null or an ally", this.constructor.name, LOG_LEVEL.WARN);\n          } else {\n            unitBeingAttacked.unitStats.health -= unitAttacking.unitStats.damage;\n            logger("Unit for player ".concat(unitBeingAttacked.controller, " took ").concat(unitAttacking.unitStats.damage, " damage, health is now at ").concat(unitBeingAttacked.unitStats.health), this.constructor.name, LOG_LEVEL.DEBUG);\n          }\n        }\n      }\n    }\n  }]);\n\n  return GameManager;\n}();\n\n\n// CONCATENATED MODULE: ./src/shared/communication/messageInterfaces/inputMessage.ts\nvar ACTION_TYPE;\n\n(function (ACTION_TYPE) {\n  ACTION_TYPE[ACTION_TYPE["MOVE"] = 0] = "MOVE";\n  ACTION_TYPE[ACTION_TYPE["SPECIAL"] = 1] = "SPECIAL";\n})(ACTION_TYPE || (ACTION_TYPE = {}));\n// CONCATENATED MODULE: ./src/client/client.ts\nfunction client_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction client_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction client_createClass(Constructor, protoProps, staticProps) { if (protoProps) client_defineProperties(Constructor.prototype, protoProps); if (staticProps) client_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction client_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nvar client_Client = /*#__PURE__*/function () {\n  function Client() {\n    var _this = this;\n\n    client_classCallCheck(this, Client);\n\n    client_defineProperty(this, "loginStatus", void 0);\n\n    client_defineProperty(this, "userId", void 0);\n\n    client_defineProperty(this, "gameOverWinner", void 0);\n\n    client_defineProperty(this, "lobbyList", void 0);\n\n    client_defineProperty(this, "socket", void 0);\n\n    client_defineProperty(this, "messageCallbacks", void 0);\n\n    client_defineProperty(this, "gameManager", void 0);\n\n    client_defineProperty(this, "updateBoardStateCallback", void 0);\n\n    this.gameManager = null;\n    this.loginStatus = null;\n    this.userId = null;\n    this.gameOverWinner = null;\n    this.lobbyList = [];\n    this.socket = lib_default()(Constants.HOSTED_URL); // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n    this.messageCallbacks = {};\n\n    for (var key in messageEnum) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.messageCallbacks[messageEnum[key]] = [];\n    }\n\n    this.updateBoardStateCallback = function (boardState) {\n      logger("This function should absolutely never be called", _this.constructor.name, LOG_LEVEL.WARN);\n    };\n  }\n\n  client_createClass(Client, [{\n    key: "listen",\n    value: function listen() {\n      var _this2 = this;\n\n      this.socket.on(messageEnum.CONNECT, function () {\n        logger("Socket has connected (".concat(_this2.socket.connected, ")"), _this2.constructor.name, LOG_LEVEL.INFO);\n\n        _this2.runAndRemoveCallbacks(messageEnum.CONNECT);\n      });\n      this.socket.on(messageEnum.DISCONNECT, function () {\n        _this2.loginStatus = null;\n        logger("Socket has disconnected (".concat(_this2.socket.connected, ")"), _this2.constructor.name, LOG_LEVEL.INFO);\n\n        _this2.runAndRemoveCallbacks(messageEnum.DISCONNECT);\n      });\n      this.socket.on(messageEnum.LOGIN, function (msg) {\n        logger("Your login status is now: ".concat(LoginMessageResponseType[msg.status]), _this2.constructor.name, LOG_LEVEL.INFO);\n        _this2.loginStatus = msg.status;\n        _this2.userId = msg.id;\n\n        if (msg.gameStateToRejoin) {\n          _this2.gameManager = new gameManager_GameManager(msg.gameStateToRejoin.gameId, _this2.userId, []);\n\n          _this2.gameManager.copyBoardState(msg.gameStateToRejoin.gameState);\n        }\n\n        _this2.runAndRemoveCallbacks(messageEnum.LOGIN);\n      });\n      this.socket.on(messageEnum.CREATE_ACCOUNT, function (msg) {\n        _this2.loginStatus = msg.status;\n\n        _this2.runAndRemoveCallbacks(messageEnum.CREATE_ACCOUNT);\n      });\n      this.socket.on(messageEnum.GET_LOBBIES, function (response) {\n        logger("Got this response: ".concat(JSON.stringify(response)), _this2.constructor.name, LOG_LEVEL.DEBUG);\n        _this2.lobbyList = response.lobbies;\n        logger("Got ".concat(_this2.lobbyList.length, " lobbies"), _this2.constructor.name, LOG_LEVEL.INFO);\n\n        _this2.runAndRemoveCallbacks(messageEnum.GET_LOBBIES);\n      });\n      this.socket.on(messageEnum.END_TURN_SIGNAL, function (response) {\n        _this2.gameManager.endTurn();\n\n        _this2.gameManager.copyBoardState(response.gameState);\n\n        _this2.updateBoardStateCallback(_this2.gameManager.boardState);\n\n        _this2.runAndRemoveCallbacks(messageEnum.END_TURN_SIGNAL);\n      });\n      this.socket.on(messageEnum.START_GAME, function (response) {\n        logger("Starting game: ".concat(response.gameId), _this2.constructor.name, LOG_LEVEL.INFO);\n        _this2.gameManager = new gameManager_GameManager(response.gameId, _this2.userId, []);\n\n        _this2.gameManager.copyBoardState(response.gameState);\n\n        _this2.runAndRemoveCallbacks(messageEnum.START_GAME);\n      });\n      this.socket.on(messageEnum.RESET_PLAYER_MOVES, function (response) {\n        _this2.gameManager.copyBoardState(response.gameState);\n\n        _this2.updateBoardStateCallback(_this2.gameManager.boardState);\n\n        _this2.runAndRemoveCallbacks(messageEnum.RESET_PLAYER_MOVES);\n      });\n      this.socket.on(messageEnum.GAME_HAS_ENDED, function (response) {\n        _this2.gameOverWinner = response.winner;\n        _this2.gameManager = null;\n\n        _this2.runAndRemoveCallbacks(messageEnum.GAME_HAS_ENDED);\n      });\n    }\n    /** Server Communication **/\n\n  }, {\n    key: "createAccount",\n    value: function createAccount(username, password, callbackFunc) {\n      var loginData = {\n        username: username,\n        password: password\n      };\n\n      if (callbackFunc) {\n        this.addOnServerMessageCallback(messageEnum.CREATE_ACCOUNT, callbackFunc);\n      }\n\n      this.socket.emit(messageEnum.CREATE_ACCOUNT, loginData);\n    }\n  }, {\n    key: "sendLoginAttempt",\n    value: function sendLoginAttempt(username, password) {\n      var loginData = {\n        username: username,\n        password: password\n      };\n      this.socket.emit(messageEnum.LOGIN, loginData);\n    }\n  }, {\n    key: "createLobby",\n    value: function createLobby(settings) {\n      var createLobbyRequest = {\n        lobbySettings: settings\n      };\n      this.socket.emit(messageEnum.CREATE_LOBBY, createLobbyRequest);\n    }\n  }, {\n    key: "joinLobby",\n    value: function joinLobby(lobbyId, teamId, callbackFunc) {\n      if (callbackFunc) {\n        this.addOnServerMessageCallback(messageEnum.GET_LOBBIES, callbackFunc);\n      }\n\n      var joinLobbyRequest = {\n        lobbyId: lobbyId,\n        teamId: teamId\n      };\n      this.socket.emit(messageEnum.JOIN_LOBBY, joinLobbyRequest);\n    }\n  }, {\n    key: "leaveLobby",\n    value: function leaveLobby(lobbyId, callbackFunc) {\n      if (callbackFunc) {\n        this.addOnServerMessageCallback(messageEnum.GET_LOBBIES, callbackFunc);\n      } // join a non-existant team in lobby to leave\n\n\n      var joinLobbyRequest = {\n        lobbyId: lobbyId,\n        teamId: -1\n      };\n      this.socket.emit(messageEnum.JOIN_LOBBY, joinLobbyRequest);\n    }\n  }, {\n    key: "loadLobbyList",\n    value: function loadLobbyList(callbackFunc) {\n      if (callbackFunc) {\n        this.addOnServerMessageCallback(messageEnum.GET_LOBBIES, callbackFunc);\n      }\n\n      this.socket.emit(messageEnum.GET_LOBBIES);\n    }\n  }, {\n    key: "startGame",\n    value: function startGame(callbackFunc) {\n      if (callbackFunc) {\n        this.addOnServerMessageCallback(messageEnum.START_GAME, callbackFunc);\n      }\n\n      this.socket.emit(messageEnum.START_GAME);\n    }\n  }, {\n    key: "sendMove",\n    value: function sendMove(move) {\n      var request = {\n        actionType: ACTION_TYPE.MOVE,\n        action: move\n      };\n      this.socket.emit(messageEnum.PLAYER_INPUT, request);\n    }\n  }, {\n    key: "sendSpecial",\n    value: function sendSpecial(special) {\n      var request = {\n        actionType: ACTION_TYPE.SPECIAL,\n        action: special\n      };\n      this.socket.emit(messageEnum.PLAYER_INPUT, request);\n    }\n  }, {\n    key: "setEndTurn",\n    value: function setEndTurn(endTurn) {\n      var request = {\n        playerHasEndedTurn: endTurn\n      };\n      this.socket.emit(messageEnum.END_TURN_SIGNAL, request);\n    }\n  }, {\n    key: "resetMoves",\n    value: function resetMoves() {\n      this.socket.emit(messageEnum.RESET_PLAYER_MOVES);\n    }\n  }, {\n    key: "concede",\n    value: function concede() {\n      this.socket.emit(messageEnum.CONCEDE);\n    }\n  }, {\n    key: "getTimeRemaining",\n    value: function getTimeRemaining(processRemainingTimeFunction) {// add callback for time remaining to call function\n      // send request\n    }\n    /**************************/\n\n  }, {\n    key: "addOnServerMessageCallback",\n    value: function addOnServerMessageCallback(serverMessage, callbackFunc) {\n      this.messageCallbacks[serverMessage].push(callbackFunc);\n    }\n  }, {\n    key: "runAndRemoveCallbacks",\n    value: function runAndRemoveCallbacks(serverMessage) {\n      this.messageCallbacks[serverMessage].forEach(function (callback) {\n        return callback();\n      });\n      this.messageCallbacks[serverMessage] = [];\n    }\n  }]);\n\n  return Client;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/css/bootstrap.css\nvar bootstrap = __webpack_require__(91);\n\n// CONCATENATED MODULE: ./src/frontend/login/LoginForm.tsx\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction LoginForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction LoginForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction LoginForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) LoginForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) LoginForm_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar LoginForm_LoginForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm(props) {\n    var _this;\n\n    LoginForm_classCallCheck(this, LoginForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: "",\n      password: ""\n    };\n    _this.handleLoginButton = _this.handleLoginButton.bind(_assertThisInitialized(_this));\n    _this.createAccountButton = _this.createAccountButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  LoginForm_createClass(LoginForm, [{\n    key: "handleLoginButton",\n    value: function handleLoginButton(event) {\n      if (this.state.username.length > 0 && this.state.password.length > 0) {\n        event.preventDefault();\n        this.props.sendLoginRequestFunc(this.state.username, this.state.password);\n        this.setState(function (prevState, _props) {\n          return {\n            username: prevState.username,\n            password: ""\n          };\n        });\n      }\n    }\n  }, {\n    key: "createAccountButton",\n    value: function createAccountButton(event) {\n      if (this.state.username.length > 0 && this.state.password.length > 0) {\n        event.preventDefault();\n        this.props.sendCreateAccountRequestFunc(this.state.username, this.state.password);\n        this.setState(function (prevState, _props) {\n          return {\n            username: prevState.username,\n            password: ""\n          };\n        });\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react["createElement"]("form", null, /*#__PURE__*/react["createElement"]("div", {\n        className: "form-group"\n      }, /*#__PURE__*/react["createElement"]("label", {\n        htmlFor: "usernameInput"\n      }, "Username"), /*#__PURE__*/react["createElement"]("input", {\n        type: "text",\n        className: "form-control",\n        id: "usernameInput",\n        "aria-describedby": "usernameHelp",\n        placeholder: "Enter username",\n        value: this.state.username,\n        onChange: function onChange(event) {\n          _this2.setState({\n            username: event.target.value\n          });\n        }\n      })), /*#__PURE__*/react["createElement"]("div", {\n        className: "form-group"\n      }, /*#__PURE__*/react["createElement"]("label", {\n        htmlFor: "passwordInput"\n      }, "Password"), /*#__PURE__*/react["createElement"]("input", {\n        type: "password",\n        className: "form-control",\n        id: "passwordInput",\n        placeholder: "Password",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), /*#__PURE__*/react["createElement"]("button", {\n        type: "submit",\n        className: "btn btn-primary",\n        onClick: this.handleLoginButton\n      }, "Login"), /*#__PURE__*/react["createElement"]("button", {\n        type: "submit",\n        className: "btn btn-success",\n        onClick: this.createAccountButton\n      }, "Create Account"));\n    }\n  }]);\n\n  return LoginForm;\n}(react["Component"]);\n\n/* harmony default export */ var login_LoginForm = (LoginForm_LoginForm);\n// EXTERNAL MODULE: ./node_modules/phaser/dist/phaser.js\nvar phaser = __webpack_require__(3);\nvar phaser_default = /*#__PURE__*/__webpack_require__.n(phaser);\n\n// EXTERNAL MODULE: ./node_modules/phaser3-rex-plugins/plugins/board-components.js + 266 modules\nvar board_components = __webpack_require__(63);\n\n// CONCATENATED MODULE: ./src/shared/utility/math.ts\nfunction math_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction math_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction math_createClass(Constructor, protoProps, staticProps) { if (protoProps) math_defineProperties(Constructor.prototype, protoProps); if (staticProps) math_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar MathUtility = /*#__PURE__*/function () {\n  function MathUtility() {\n    math_classCallCheck(this, MathUtility);\n  }\n\n  math_createClass(MathUtility, null, [{\n    key: "clamp",\n    value: function clamp(num, max, min) {\n      return Math.min(Math.max(num, min), max);\n    }\n  }, {\n    key: "locationEquals",\n    value: function locationEquals(location1, location2) {\n      return location1.x == location2.x && location1.y == location2.y;\n    }\n  }]);\n\n  return MathUtility;\n}();\n\n\n// CONCATENATED MODULE: ./src/client/game/gameBoard.ts\nfunction gameBoard_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { gameBoard_typeof = function _typeof(obj) { return typeof obj; }; } else { gameBoard_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return gameBoard_typeof(obj); }\n\nfunction gameBoard_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction gameBoard_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction gameBoard_createClass(Constructor, protoProps, staticProps) { if (protoProps) gameBoard_defineProperties(Constructor.prototype, protoProps); if (staticProps) gameBoard_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction gameBoard_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) gameBoard_setPrototypeOf(subClass, superClass); }\n\nfunction gameBoard_setPrototypeOf(o, p) { gameBoard_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return gameBoard_setPrototypeOf(o, p); }\n\nfunction gameBoard_createSuper(Derived) { var hasNativeReflectConstruct = gameBoard_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = gameBoard_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = gameBoard_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return gameBoard_possibleConstructorReturn(this, result); }; }\n\nfunction gameBoard_possibleConstructorReturn(self, call) { if (call && (gameBoard_typeof(call) === "object" || typeof call === "function")) { return call; } return gameBoard_assertThisInitialized(self); }\n\nfunction gameBoard_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction gameBoard_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction gameBoard_getPrototypeOf(o) { gameBoard_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return gameBoard_getPrototypeOf(o); }\n\nfunction gameBoard_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar gameBoard_GameBoard = /*#__PURE__*/function (_Board) {\n  gameBoard_inherits(GameBoard, _Board);\n\n  var _super = gameBoard_createSuper(GameBoard);\n\n  function GameBoard(scene, config) {\n    var _this;\n\n    gameBoard_classCallCheck(this, GameBoard);\n\n    // create board\n    _this = _super.call(this, scene, config);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "scene", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "selected", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "selectedRenderTexture", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "selectedFillGraphics", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "specialSelectableRenderTexture", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "specialSelectableFillGraphics", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "selectableLocations", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "state", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "selectedPath", void 0);\n\n    gameBoard_defineProperty(gameBoard_assertThisInitialized(_this), "moveTo", void 0);\n\n    _this.scene = scene;\n    _this.selected = null;\n    _this.state = ActionState.IDLE;\n    _this.selectableLocations = [];\n    _this.moveTo = {\n      x: 0,\n      y: 0\n    }; // draw grid\n\n    _this.selectedFillGraphics = scene.add.graphics({\n      fillStyle: {\n        color: 0x0071ff,\n        alpha: 0.85\n      }\n    });\n    _this.specialSelectableFillGraphics = scene.add.graphics({\n      fillStyle: {\n        color: 0xff6622,\n        alpha: 0.85\n      }\n    });\n    var gridGraphics = scene.add.graphics({\n      lineStyle: {\n        width: 2,\n        color: 0x007ac1,\n        alpha: 1\n      }\n    });\n\n    _this.forEachTileXY(function (tileXY, board) {\n      var points = board.getGridPoints(tileXY.x, tileXY.y, true);\n      gridGraphics.strokePoints(points, true);\n    });\n\n    var size = _this.getWorldSize();\n\n    scene.add.renderTexture(0, 0, size.x, size.y).draw(gridGraphics).setDepth(-1);\n    _this.selectedRenderTexture = scene.add.renderTexture(0, 0, size.x, size.y);\n    _this.specialSelectableRenderTexture = scene.add.renderTexture(0, 0, size.x, size.y);\n    gridGraphics.destroy();\n\n    _this.setInteractive().on("tiledown", function (pointer, tileXY) {\n      if (pointer.leftButtonDown()) {\n        logger("Clicked on tile ".concat(tileXY.x, ",").concat(tileXY.y), _this.constructor.name, LOG_LEVEL.TRACE);\n\n        var unit = _this.tileXYZToChess(tileXY.x, tileXY.y, 1);\n\n        if (unit) {\n          // if clicking on ally unit - try to select\n          if (unit.gameUnit.controller == _this.scene.gameManager.controllerId) {\n            logger("Clicked on unit ".concat(JSON.stringify(unit.gameUnit.unitStats)), _this.constructor.name, LOG_LEVEL.TRACE);\n\n            if (_this.state === ActionState.IDLE) {\n              _this.setSelected(tileXY, unit);\n            }\n          } else {\n            //   if clicking on enemy unit, try to attack\n            if (_this.state === ActionState.ATTACKING) {\n              var damage = _this.selected[1].gameUnit.unitStats.damage;\n              unit.gameUnit.unitStats.health -= damage;\n\n              _this.selected[1].gameUnit.useSpecialAction(SpecialActionName.ATTACK);\n\n              var special = {\n                actionName: SpecialActionName.ATTACK,\n                alliesInvolved: [],\n                enemiesInvolved: [unit.gameUnit],\n                amounts: [],\n                unitDoingAction: _this.selected[1].gameUnit,\n                targetedCoordinates: tileXY\n              };\n\n              _this.scene.client.sendSpecial(special);\n\n              _this.unSelect();\n\n              unit.emit("drawHealth");\n            }\n          }\n        }\n      }\n    }).on("tilemove", function (pointer, tileXY) {\n      if (_this.state == ActionState.SELECTED) {\n        _this.selectedPath.length = 1;\n\n        _this.getPath(_this.selected[1], tileXY, _this.selectedPath);\n\n        var distanceBetween = _this.selectedPath.reduce(function (acc, curr, idx, arr) {\n          if (idx == 0) {\n            return 0;\n          } else {\n            return acc + _this.getDistance(arr[idx - 1], curr);\n          }\n        }, 0);\n\n        if (distanceBetween <= _this.selected[1].gameUnit.unitStats.movesRemaining) {\n          _this.drawPath(_this.selectedPath);\n\n          _this.moveTo = {\n            x: tileXY.x,\n            y: tileXY.y\n          };\n        }\n      }\n    });\n\n    _this.scene.input.on("pointerup", function (pointer) {\n      var distanceBetween = _this.selected && _this.moveTo ? _this.getDistance(_this.selected[0], _this.moveTo) : 0;\n      logger("Distance between: ".concat(distanceBetween), _this.constructor.name, LOG_LEVEL.DEBUG);\n\n      if (pointer.leftButtonReleased() && _this.state == ActionState.SELECTED && distanceBetween > 0) {\n        var unitMovingOnTopOf = _this.moveTo ? _this.tileXYToChessArray(_this.moveTo.x, _this.moveTo.y) : null;\n\n        if (!((unitMovingOnTopOf === null || unitMovingOnTopOf === void 0 ? void 0 : unitMovingOnTopOf.length) > 0)) {\n          _this.selected[1].once("move.complete", function () {\n            _this.clearPath();\n\n            _this.state = ActionState.IDLE;\n\n            if (_this.selected[1].gameUnit.unitStats.movesRemaining == 0) {\n              _this.selected[1].setTint(0xffffff);\n            }\n\n            if (_this.moveTo) {\n              if (distanceBetween > 0) {\n                _this.selected[1].gameUnit.useMovesTo(distanceBetween, _this.moveTo); // send move request to server\n\n\n                var move = {\n                  unitDoingAction: _this.selected[1].gameUnit,\n                  targetedCoordinates: _this.moveTo\n                };\n\n                _this.scene.client.sendMove(move);\n\n                _this.selected[1].emit("drawHealth"); //Re-set selection (because move)\n\n\n                _this.unSelect();\n              }\n            }\n          }).moveAlongPath(_this.selectedPath);\n\n          _this.state = ActionState.MOVING;\n        }\n      }\n    });\n\n    _this.scene.input.on("pointerdown", function (pointer) {\n      if (pointer.rightButtonDown() && (_this.state == ActionState.SELECTED || _this.state == ActionState.ATTACKING)) {\n        _this.unSelect();\n      }\n    });\n\n    _this.scene.input.keyboard.on("keydown-A", function () {\n      var unit = _this.selected[1];\n      var attackKey = SpecialActionName.ATTACK;\n\n      if (unit && unit.gameUnit.specialMoves.includes(attackKey) && unit.gameUnit.canUseSpecial(attackKey) && _this.state == ActionState.SELECTED) {\n        // check if unit has already moved\n        // for now just check if starting position is equal to current position\n        if (MathUtility.locationEquals(unit.gameUnit.turnStartLocation, unit.gameUnit.location)) {\n          var positionsAroundUnit = _this.filledRingToTileXYArray(unit.gameUnit.location, unit.gameUnit.unitStats.range);\n\n          _this.selectableLocations = positionsAroundUnit.filter(function (position) {\n            var unit = _this.tileXYZToChess(position.x, position.y, 1);\n\n            return unit && unit.gameUnit.controller != _this.scene.client.userId;\n          });\n          _this.state = ActionState.ATTACKING;\n\n          _this.clearPath();\n\n          _this.drawSelectableLocations(); //\n\n        }\n      }\n    });\n\n    _this.pathGraphics = scene.add.graphics({\n      lineStyle: {\n        width: 3,\n        color: 0x007ac1,\n        alpha: 1\n      }\n    });\n    _this.pathTexture = scene.add.renderTexture(0, 0, size.x, size.y).setDepth(2);\n    _this.pathFinder = scene["rexBoard"].add.pathFinder({\n      occupiedTest: true,\n      pathMode: "A*"\n    });\n    return _this;\n  }\n\n  gameBoard_createClass(GameBoard, [{\n    key: "getWorldCameraOrigin",\n    value: function getWorldCameraOrigin() {\n      return this.tileXYToWorldXY(-1, -1);\n    }\n  }, {\n    key: "getWorldSize",\n    value: function getWorldSize() {\n      return this.tileXYToWorldXY(this.scene.width, this.scene.height);\n    }\n  }, {\n    key: "drawSelectableLocations",\n    value: function drawSelectableLocations() {\n      var _this2 = this;\n\n      this.specialSelectableRenderTexture.clear();\n      this.specialSelectableFillGraphics.clear();\n      this.selectableLocations.forEach(function (location) {\n        _this2.specialSelectableFillGraphics.fillPoints(_this2.getGridPoints(location.x, location.y, true), true);\n      });\n      this.specialSelectableRenderTexture.draw(this.specialSelectableFillGraphics);\n    }\n  }, {\n    key: "setSelected",\n    value: function setSelected(location, unit) {\n      this.selectedRenderTexture.clear();\n      this.selectedFillGraphics.clear();\n\n      if (unit) {\n        this.selectedFillGraphics.fillPoints(this.getGridPoints(location.x, location.y, true), true);\n        this.selectedRenderTexture.draw(this.selectedFillGraphics);\n        this.selected = [{\n          x: location.x,\n          y: location.y\n        }, unit];\n        this.state = ActionState.SELECTED;\n        this.selectedPath = [this.chessToTileXYZ(unit)];\n      }\n    }\n  }, {\n    key: "unSelect",\n    value: function unSelect() {\n      this.setSelected(null, null);\n      this.moveTo = null;\n      this.state = ActionState.IDLE;\n      this.clearPath();\n      this.selectedRenderTexture.clear();\n      this.specialSelectableRenderTexture.clear();\n      this.specialSelectableFillGraphics.clear();\n    }\n  }, {\n    key: "clearPath",\n    value: function clearPath() {\n      this.pathTexture.clear();\n      return this;\n    }\n  }, {\n    key: "drawPath",\n    value: function drawPath(tileXYArray) {\n      this.pathGraphics.strokePoints(this.tileXYArrayToWorldXYArray(tileXYArray));\n      this.pathTexture.clear().draw(this.pathGraphics);\n      this.pathGraphics.clear();\n      return this;\n    }\n  }, {\n    key: "getPath",\n    value: function getPath(chess, endTileXY, out) {\n      return this.pathFinder.setChess(chess).findPath(endTileXY, undefined, false, out);\n    }\n  }]);\n\n  return GameBoard;\n}(board_components["a" /* Board */]);\n\n\nvar ActionState;\n\n(function (ActionState) {\n  ActionState["IDLE"] = "idle";\n  ActionState["SELECTED"] = "selected";\n  ActionState["ATTACKING"] = "attacking";\n  ActionState["MOVING"] = "moving";\n})(ActionState || (ActionState = {}));\n// CONCATENATED MODULE: ./src/client/resources/images/fighter.png\n/* harmony default export */ var fighter = (__webpack_require__.p + "assets/fighter.png");\n// CONCATENATED MODULE: ./src/client/resources/images/enemyfighter.png\n/* harmony default export */ var enemyfighter = (__webpack_require__.p + "assets/enemyfighter.png");\n// CONCATENATED MODULE: ./src/client/resources/images/speeder.png\n/* harmony default export */ var speeder = (__webpack_require__.p + "assets/speeder.png");\n// CONCATENATED MODULE: ./src/client/resources/images/enemyspeeder.png\n/* harmony default export */ var enemyspeeder = (__webpack_require__.p + "assets/enemyspeeder.png");\n// CONCATENATED MODULE: ./src/client/resources/images/destroyer.png\n/* harmony default export */ var destroyer = (__webpack_require__.p + "assets/destroyer.png");\n// CONCATENATED MODULE: ./src/client/resources/images/enemydestroyer.png\n/* harmony default export */ var enemydestroyer = (__webpack_require__.p + "assets/enemydestroyer.png");\n// CONCATENATED MODULE: ./src/client/resources/images/mainbase.png\n/* harmony default export */ var mainbase = (__webpack_require__.p + "assets/mainbase.png");\n// CONCATENATED MODULE: ./src/client/resources/images/mainbaseenemy.png\n/* harmony default export */ var mainbaseenemy = (__webpack_require__.p + "assets/mainbaseenemy.png");\n// CONCATENATED MODULE: ./src/client/game/units/phaserGameUnit.ts\nfunction phaserGameUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { phaserGameUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { phaserGameUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return phaserGameUnit_typeof(obj); }\n\nfunction phaserGameUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction phaserGameUnit_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction phaserGameUnit_createClass(Constructor, protoProps, staticProps) { if (protoProps) phaserGameUnit_defineProperties(Constructor.prototype, protoProps); if (staticProps) phaserGameUnit_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction phaserGameUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) phaserGameUnit_setPrototypeOf(subClass, superClass); }\n\nfunction phaserGameUnit_setPrototypeOf(o, p) { phaserGameUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return phaserGameUnit_setPrototypeOf(o, p); }\n\nfunction phaserGameUnit_createSuper(Derived) { var hasNativeReflectConstruct = phaserGameUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = phaserGameUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = phaserGameUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return phaserGameUnit_possibleConstructorReturn(this, result); }; }\n\nfunction phaserGameUnit_possibleConstructorReturn(self, call) { if (call && (phaserGameUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return phaserGameUnit_assertThisInitialized(self); }\n\nfunction phaserGameUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction phaserGameUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction phaserGameUnit_getPrototypeOf(o) { phaserGameUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return phaserGameUnit_getPrototypeOf(o); }\n\nfunction phaserGameUnit_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar PhaserGameUnit = /*#__PURE__*/function (_Phaser$GameObjects$I) {\n  phaserGameUnit_inherits(PhaserGameUnit, _Phaser$GameObjects$I);\n\n  var _super = phaserGameUnit_createSuper(PhaserGameUnit);\n\n  function PhaserGameUnit(scene, x, y, texture, gameUnit) {\n    var _this;\n\n    phaserGameUnit_classCallCheck(this, PhaserGameUnit);\n\n    _this = _super.call(this, scene, x, y, texture);\n\n    phaserGameUnit_defineProperty(phaserGameUnit_assertThisInitialized(_this), "moveTo", void 0);\n\n    phaserGameUnit_defineProperty(phaserGameUnit_assertThisInitialized(_this), "gameUnit", void 0);\n\n    _this.gameUnit = gameUnit;\n    scene.add.existing(phaserGameUnit_assertThisInitialized(_this));\n    scene.board.addChess(phaserGameUnit_assertThisInitialized(_this), x, y, 1);\n    _this.moveTo = scene["rexBoard"].add.moveTo(phaserGameUnit_assertThisInitialized(_this), {\n      rotateToTarget: true,\n      speed: gameUnit.unitStats.moveSpeed * 100\n    });\n    return _this;\n  }\n\n  phaserGameUnit_createClass(PhaserGameUnit, [{\n    key: "moveAlongPath",\n    value: function moveAlongPath(path) {\n      var _this2 = this;\n\n      if (path.length === 0) {\n        this.emit("move.complete");\n        return;\n      }\n\n      this.moveTo.once("complete", function () {\n        _this2.moveAlongPath(path);\n      }, this);\n      this.moveTo.moveTo(path.shift());\n      return this;\n    }\n  }]);\n\n  return PhaserGameUnit;\n}(phaser_default.a.GameObjects.Image);\n\n\n// CONCATENATED MODULE: ./src/client/game/units/phaserFighterUnit.ts\nfunction phaserFighterUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { phaserFighterUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { phaserFighterUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return phaserFighterUnit_typeof(obj); }\n\nfunction phaserFighterUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction phaserFighterUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) phaserFighterUnit_setPrototypeOf(subClass, superClass); }\n\nfunction phaserFighterUnit_setPrototypeOf(o, p) { phaserFighterUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return phaserFighterUnit_setPrototypeOf(o, p); }\n\nfunction phaserFighterUnit_createSuper(Derived) { var hasNativeReflectConstruct = phaserFighterUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = phaserFighterUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = phaserFighterUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return phaserFighterUnit_possibleConstructorReturn(this, result); }; }\n\nfunction phaserFighterUnit_possibleConstructorReturn(self, call) { if (call && (phaserFighterUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return phaserFighterUnit_assertThisInitialized(self); }\n\nfunction phaserFighterUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction phaserFighterUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction phaserFighterUnit_getPrototypeOf(o) { phaserFighterUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return phaserFighterUnit_getPrototypeOf(o); }\n\n\n\nvar PhaserFighterUnit = /*#__PURE__*/function (_PhaserGameUnit) {\n  phaserFighterUnit_inherits(PhaserFighterUnit, _PhaserGameUnit);\n\n  var _super = phaserFighterUnit_createSuper(PhaserFighterUnit);\n\n  function PhaserFighterUnit(scene, location, fighterUnit) {\n    phaserFighterUnit_classCallCheck(this, PhaserFighterUnit);\n\n    var isMine = fighterUnit.controller == scene.client.userId;\n    return _super.call(this, scene, location.x, location.y, isMine ? "fighter" : "enemyFighter", fighterUnit);\n  }\n\n  return PhaserFighterUnit;\n}(PhaserGameUnit);\n\n\n// CONCATENATED MODULE: ./src/client/game/gui/healthBar.ts\nfunction healthBar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction healthBar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction healthBar_createClass(Constructor, protoProps, staticProps) { if (protoProps) healthBar_defineProperties(Constructor.prototype, protoProps); if (staticProps) healthBar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction healthBar_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar HealthBar = /*#__PURE__*/function () {\n  function HealthBar(scene, parentUnit) {\n    healthBar_classCallCheck(this, HealthBar);\n\n    healthBar_defineProperty(this, "bar", void 0);\n\n    healthBar_defineProperty(this, "parentUnit", void 0);\n\n    healthBar_defineProperty(this, "scene", void 0);\n\n    healthBar_defineProperty(this, "barHeight", void 0);\n\n    this.bar = new Phaser.GameObjects.Graphics(scene);\n    this.parentUnit = parentUnit;\n    this.scene = scene;\n    this.barHeight = 15;\n    this.draw = this.draw.bind(this);\n    this.draw();\n    this.scene.add.existing(this.bar);\n    this.onParentUnitMove = this.onParentUnitMove.bind(this);\n    parentUnit.once("drawHealth", this.onParentUnitMove);\n  }\n\n  healthBar_createClass(HealthBar, [{\n    key: "onParentUnitMove",\n    value: function onParentUnitMove() {\n      this.draw();\n      this.parentUnit.once("drawHealth", this.onParentUnitMove);\n    }\n  }, {\n    key: "draw",\n    value: function draw() {\n      this.bar.clear();\n      var worldPosition = this.scene.board.tileXYToWorldXY(this.parentUnit.gameUnit.location.x, this.parentUnit.gameUnit.location.y);\n      var barXY = {\n        x: worldPosition.x - this.parentUnit.displayWidth / 2,\n        y: worldPosition.y - this.parentUnit.displayHeight / 2 - this.barHeight - 10\n      }; // draw background\n\n      this.bar.fillStyle(0x000000);\n      this.bar.fillRect(barXY.x, barXY.y, this.parentUnit.displayWidth, this.barHeight);\n\n      if (this.parentUnit.gameUnit.unitStats.health > 0) {\n        var border = 2;\n        var innerDimension = [barXY.x + border, barXY.y + border, this.parentUnit.displayWidth - border, this.barHeight - border];\n        this.bar.fillStyle(0xffffff);\n        this.bar.fillRect(innerDimension[0], innerDimension[1], innerDimension[2], innerDimension[3]);\n        var healthPercentWidth = this.parentUnit.displayWidth * (this.parentUnit.gameUnit.unitStats.health / this.parentUnit.gameUnit.unitStats.maxHealth);\n        var ally = this.parentUnit.gameUnit.controller == this.scene.client.userId;\n\n        if (ally) {\n          // Draw remaining moves\n          var movesBarXY = {\n            x: barXY.x,\n            y: barXY.y - this.barHeight / 2 - border\n          };\n          this.bar.fillStyle(0x000000);\n          this.bar.fillRect(movesBarXY.x, movesBarXY.y, this.parentUnit.displayWidth, this.barHeight / 2);\n          var _innerDimension = [movesBarXY.x + border, movesBarXY.y + border, this.parentUnit.displayWidth - border, this.barHeight / 2 - border];\n          this.bar.fillStyle(0xffffff);\n          this.bar.fillRect(_innerDimension[0], _innerDimension[1], _innerDimension[2], _innerDimension[3]);\n          var movesPercentWidth = this.parentUnit.displayWidth * (this.parentUnit.gameUnit.unitStats.movesRemaining / this.parentUnit.gameUnit.unitStats.moveSpeed);\n          this.bar.fillStyle(0xffd300);\n          this.bar.fillRect(_innerDimension[0], _innerDimension[1], movesPercentWidth, _innerDimension[3]);\n          this.bar.fillStyle(0x00ffc2);\n        } else {\n          this.bar.fillStyle(0xff1122);\n        }\n\n        this.bar.fillRect(innerDimension[0], innerDimension[1], healthPercentWidth, innerDimension[3]);\n      }\n    }\n  }]);\n\n  return HealthBar;\n}();\n\n\n// CONCATENATED MODULE: ./src/client/game/units/phaserSpeederUnit.ts\nfunction phaserSpeederUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { phaserSpeederUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { phaserSpeederUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return phaserSpeederUnit_typeof(obj); }\n\nfunction phaserSpeederUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction phaserSpeederUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) phaserSpeederUnit_setPrototypeOf(subClass, superClass); }\n\nfunction phaserSpeederUnit_setPrototypeOf(o, p) { phaserSpeederUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return phaserSpeederUnit_setPrototypeOf(o, p); }\n\nfunction phaserSpeederUnit_createSuper(Derived) { var hasNativeReflectConstruct = phaserSpeederUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = phaserSpeederUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = phaserSpeederUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return phaserSpeederUnit_possibleConstructorReturn(this, result); }; }\n\nfunction phaserSpeederUnit_possibleConstructorReturn(self, call) { if (call && (phaserSpeederUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return phaserSpeederUnit_assertThisInitialized(self); }\n\nfunction phaserSpeederUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction phaserSpeederUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction phaserSpeederUnit_getPrototypeOf(o) { phaserSpeederUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return phaserSpeederUnit_getPrototypeOf(o); }\n\n\n\nvar PhaserSpeederUnit = /*#__PURE__*/function (_PhaserGameUnit) {\n  phaserSpeederUnit_inherits(PhaserSpeederUnit, _PhaserGameUnit);\n\n  var _super = phaserSpeederUnit_createSuper(PhaserSpeederUnit);\n\n  function PhaserSpeederUnit(scene, location, speederUnit) {\n    phaserSpeederUnit_classCallCheck(this, PhaserSpeederUnit);\n\n    var isMine = speederUnit.controller == scene.client.userId;\n    return _super.call(this, scene, location.x, location.y, isMine ? "speeder" : "enemySpeeder", speederUnit);\n  }\n\n  return PhaserSpeederUnit;\n}(PhaserGameUnit);\n\n\n// EXTERNAL MODULE: ./src/shared/game/units/unitStats.json\nvar units_unitStats = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/shared/game/units/speederUnit.ts\nfunction speederUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { speederUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { speederUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return speederUnit_typeof(obj); }\n\nfunction speederUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction speederUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) speederUnit_setPrototypeOf(subClass, superClass); }\n\nfunction speederUnit_setPrototypeOf(o, p) { speederUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return speederUnit_setPrototypeOf(o, p); }\n\nfunction speederUnit_createSuper(Derived) { var hasNativeReflectConstruct = speederUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = speederUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = speederUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return speederUnit_possibleConstructorReturn(this, result); }; }\n\nfunction speederUnit_possibleConstructorReturn(self, call) { if (call && (speederUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return speederUnit_assertThisInitialized(self); }\n\nfunction speederUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction speederUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction speederUnit_getPrototypeOf(o) { speederUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return speederUnit_getPrototypeOf(o); }\n\n\n\n\n\nvar speederUnit_SpeederUnit = /*#__PURE__*/function (_GameUnit) {\n  speederUnit_inherits(SpeederUnit, _GameUnit);\n\n  var _super = speederUnit_createSuper(SpeederUnit);\n\n  function SpeederUnit(controller, team, location) {\n    speederUnit_classCallCheck(this, SpeederUnit);\n\n    return _super.call(this, controller, team, units_unitStats.speeder, [SpecialActionName.ATTACK], location, "SpeederUnit");\n  }\n\n  return SpeederUnit;\n}(gameUnit_GameUnit);\n\n\n// CONCATENATED MODULE: ./src/shared/game/units/fighterUnit.ts\nfunction fighterUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { fighterUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { fighterUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return fighterUnit_typeof(obj); }\n\nfunction fighterUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction fighterUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) fighterUnit_setPrototypeOf(subClass, superClass); }\n\nfunction fighterUnit_setPrototypeOf(o, p) { fighterUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return fighterUnit_setPrototypeOf(o, p); }\n\nfunction fighterUnit_createSuper(Derived) { var hasNativeReflectConstruct = fighterUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = fighterUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = fighterUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return fighterUnit_possibleConstructorReturn(this, result); }; }\n\nfunction fighterUnit_possibleConstructorReturn(self, call) { if (call && (fighterUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return fighterUnit_assertThisInitialized(self); }\n\nfunction fighterUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction fighterUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction fighterUnit_getPrototypeOf(o) { fighterUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return fighterUnit_getPrototypeOf(o); }\n\n\n\n\n\nvar fighterUnit_FighterUnit = /*#__PURE__*/function (_GameUnit) {\n  fighterUnit_inherits(FighterUnit, _GameUnit);\n\n  var _super = fighterUnit_createSuper(FighterUnit);\n\n  function FighterUnit(controller, team, location) {\n    fighterUnit_classCallCheck(this, FighterUnit);\n\n    return _super.call(this, controller, team, units_unitStats.fighter, [SpecialActionName.ATTACK], location, "FighterUnit");\n  }\n\n  return FighterUnit;\n}(gameUnit_GameUnit);\n\n\n// CONCATENATED MODULE: ./src/shared/game/units/destoyerUnit.ts\nfunction destoyerUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { destoyerUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { destoyerUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return destoyerUnit_typeof(obj); }\n\nfunction destoyerUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction destoyerUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) destoyerUnit_setPrototypeOf(subClass, superClass); }\n\nfunction destoyerUnit_setPrototypeOf(o, p) { destoyerUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return destoyerUnit_setPrototypeOf(o, p); }\n\nfunction destoyerUnit_createSuper(Derived) { var hasNativeReflectConstruct = destoyerUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = destoyerUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = destoyerUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return destoyerUnit_possibleConstructorReturn(this, result); }; }\n\nfunction destoyerUnit_possibleConstructorReturn(self, call) { if (call && (destoyerUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return destoyerUnit_assertThisInitialized(self); }\n\nfunction destoyerUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction destoyerUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction destoyerUnit_getPrototypeOf(o) { destoyerUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return destoyerUnit_getPrototypeOf(o); }\n\n\n\n\n\nvar destoyerUnit_DestroyerUnit = /*#__PURE__*/function (_GameUnit) {\n  destoyerUnit_inherits(DestroyerUnit, _GameUnit);\n\n  var _super = destoyerUnit_createSuper(DestroyerUnit);\n\n  function DestroyerUnit(controller, team, location) {\n    destoyerUnit_classCallCheck(this, DestroyerUnit);\n\n    return _super.call(this, controller, team, units_unitStats.destroyer, [SpecialActionName.ATTACK], location, "DestroyerUnit");\n  }\n\n  return DestroyerUnit;\n}(gameUnit_GameUnit);\n\n\n// CONCATENATED MODULE: ./src/client/game/units/phaserDestroyerUnit.ts\nfunction phaserDestroyerUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { phaserDestroyerUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { phaserDestroyerUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return phaserDestroyerUnit_typeof(obj); }\n\nfunction phaserDestroyerUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction phaserDestroyerUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) phaserDestroyerUnit_setPrototypeOf(subClass, superClass); }\n\nfunction phaserDestroyerUnit_setPrototypeOf(o, p) { phaserDestroyerUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return phaserDestroyerUnit_setPrototypeOf(o, p); }\n\nfunction phaserDestroyerUnit_createSuper(Derived) { var hasNativeReflectConstruct = phaserDestroyerUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = phaserDestroyerUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = phaserDestroyerUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return phaserDestroyerUnit_possibleConstructorReturn(this, result); }; }\n\nfunction phaserDestroyerUnit_possibleConstructorReturn(self, call) { if (call && (phaserDestroyerUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return phaserDestroyerUnit_assertThisInitialized(self); }\n\nfunction phaserDestroyerUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction phaserDestroyerUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction phaserDestroyerUnit_getPrototypeOf(o) { phaserDestroyerUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return phaserDestroyerUnit_getPrototypeOf(o); }\n\n\n\nvar PhaserDestroyerUnit = /*#__PURE__*/function (_PhaserGameUnit) {\n  phaserDestroyerUnit_inherits(PhaserDestroyerUnit, _PhaserGameUnit);\n\n  var _super = phaserDestroyerUnit_createSuper(PhaserDestroyerUnit);\n\n  function PhaserDestroyerUnit(scene, location, destroyerUnit) {\n    phaserDestroyerUnit_classCallCheck(this, PhaserDestroyerUnit);\n\n    var isMine = destroyerUnit.controller == scene.client.userId;\n    return _super.call(this, scene, location.x, location.y, isMine ? "destroyer" : "enemyDestroyer", destroyerUnit);\n  }\n\n  return PhaserDestroyerUnit;\n}(PhaserGameUnit);\n\n\n// CONCATENATED MODULE: ./src/shared/game/units/mainBaseUnit.ts\nfunction mainBaseUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { mainBaseUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { mainBaseUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return mainBaseUnit_typeof(obj); }\n\nfunction mainBaseUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction mainBaseUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) mainBaseUnit_setPrototypeOf(subClass, superClass); }\n\nfunction mainBaseUnit_setPrototypeOf(o, p) { mainBaseUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return mainBaseUnit_setPrototypeOf(o, p); }\n\nfunction mainBaseUnit_createSuper(Derived) { var hasNativeReflectConstruct = mainBaseUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = mainBaseUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = mainBaseUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return mainBaseUnit_possibleConstructorReturn(this, result); }; }\n\nfunction mainBaseUnit_possibleConstructorReturn(self, call) { if (call && (mainBaseUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return mainBaseUnit_assertThisInitialized(self); }\n\nfunction mainBaseUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction mainBaseUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction mainBaseUnit_getPrototypeOf(o) { mainBaseUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return mainBaseUnit_getPrototypeOf(o); }\n\n\n\n\nvar mainBaseUnit_MainBaseUnit = /*#__PURE__*/function (_GameUnit) {\n  mainBaseUnit_inherits(MainBaseUnit, _GameUnit);\n\n  var _super = mainBaseUnit_createSuper(MainBaseUnit);\n\n  function MainBaseUnit(controller, team, location) {\n    mainBaseUnit_classCallCheck(this, MainBaseUnit);\n\n    return _super.call(this, controller, team, units_unitStats.mainbase, [], location, "MainBaseUnit");\n  }\n\n  return MainBaseUnit;\n}(gameUnit_GameUnit);\n\n\n// CONCATENATED MODULE: ./src/client/game/units/phaserMainBaseUnit.ts\nfunction phaserMainBaseUnit_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { phaserMainBaseUnit_typeof = function _typeof(obj) { return typeof obj; }; } else { phaserMainBaseUnit_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return phaserMainBaseUnit_typeof(obj); }\n\nfunction phaserMainBaseUnit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction phaserMainBaseUnit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) phaserMainBaseUnit_setPrototypeOf(subClass, superClass); }\n\nfunction phaserMainBaseUnit_setPrototypeOf(o, p) { phaserMainBaseUnit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return phaserMainBaseUnit_setPrototypeOf(o, p); }\n\nfunction phaserMainBaseUnit_createSuper(Derived) { var hasNativeReflectConstruct = phaserMainBaseUnit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = phaserMainBaseUnit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = phaserMainBaseUnit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return phaserMainBaseUnit_possibleConstructorReturn(this, result); }; }\n\nfunction phaserMainBaseUnit_possibleConstructorReturn(self, call) { if (call && (phaserMainBaseUnit_typeof(call) === "object" || typeof call === "function")) { return call; } return phaserMainBaseUnit_assertThisInitialized(self); }\n\nfunction phaserMainBaseUnit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction phaserMainBaseUnit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction phaserMainBaseUnit_getPrototypeOf(o) { phaserMainBaseUnit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return phaserMainBaseUnit_getPrototypeOf(o); }\n\n\n\nvar PhaserMainBaseUnit = /*#__PURE__*/function (_PhaserGameUnit) {\n  phaserMainBaseUnit_inherits(PhaserMainBaseUnit, _PhaserGameUnit);\n\n  var _super = phaserMainBaseUnit_createSuper(PhaserMainBaseUnit);\n\n  function PhaserMainBaseUnit(scene, location, mainBaseUnit) {\n    phaserMainBaseUnit_classCallCheck(this, PhaserMainBaseUnit);\n\n    var isMine = mainBaseUnit.controller == scene.client.userId;\n    return _super.call(this, scene, location.x, location.y, isMine ? "mainbase" : "enemyMainbase", mainBaseUnit);\n  }\n\n  return PhaserMainBaseUnit;\n}(PhaserGameUnit);\n\n\n// CONCATENATED MODULE: ./src/client/game/scene/gameScene.ts\nfunction gameScene_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { gameScene_typeof = function _typeof(obj) { return typeof obj; }; } else { gameScene_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return gameScene_typeof(obj); }\n\nfunction gameScene_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction gameScene_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction gameScene_createClass(Constructor, protoProps, staticProps) { if (protoProps) gameScene_defineProperties(Constructor.prototype, protoProps); if (staticProps) gameScene_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = gameScene_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction gameScene_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) gameScene_setPrototypeOf(subClass, superClass); }\n\nfunction gameScene_setPrototypeOf(o, p) { gameScene_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return gameScene_setPrototypeOf(o, p); }\n\nfunction gameScene_createSuper(Derived) { var hasNativeReflectConstruct = gameScene_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = gameScene_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = gameScene_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return gameScene_possibleConstructorReturn(this, result); }; }\n\nfunction gameScene_possibleConstructorReturn(self, call) { if (call && (gameScene_typeof(call) === "object" || typeof call === "function")) { return call; } return gameScene_assertThisInitialized(self); }\n\nfunction gameScene_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction gameScene_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction gameScene_getPrototypeOf(o) { gameScene_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return gameScene_getPrototypeOf(o); }\n\nfunction gameScene_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gameScene_GameScene = /*#__PURE__*/function (_Phaser$Scene) {\n  gameScene_inherits(GameScene, _Phaser$Scene);\n\n  var _super = gameScene_createSuper(GameScene);\n\n  function GameScene(width, height, client, gameManager) {\n    var _this;\n\n    gameScene_classCallCheck(this, GameScene);\n\n    var config = {\n      active: false\n    };\n    _this = _super.call(this, config);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "board", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "rexBoard", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "cameraController", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "width", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "height", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "client", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "gameManager", void 0);\n\n    gameScene_defineProperty(gameScene_assertThisInitialized(_this), "phaserGameUnitPool", void 0);\n\n    _this.width = width;\n    _this.height = height;\n    _this.client = client;\n    _this.gameManager = null;\n    _this.rexBoard = null;\n    _this.loadBoardState = _this.loadBoardState.bind(gameScene_assertThisInitialized(_this));\n    _this.client.updateBoardStateCallback = _this.loadBoardState;\n    _this.gameManager = gameManager;\n    _this.phaserGameUnitPool = [];\n    return _this;\n  }\n\n  gameScene_createClass(GameScene, [{\n    key: "preload",\n    value: function preload() {\n      this.load.scenePlugin({\n        key: "rexboardplugin",\n        url: "https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexboardplugin.min.js",\n        sceneKey: "rexBoard"\n      });\n      this.load.image("fighter", fighter);\n      this.load.image("enemyFighter", enemyfighter);\n      this.load.image("speeder", speeder);\n      this.load.image("enemySpeeder", enemyspeeder);\n      this.load.image("destroyer", destroyer);\n      this.load.image("enemyDestroyer", enemydestroyer);\n      this.load.image("mainbase", mainbase);\n      this.load.image("enemyMainbase", mainbaseenemy);\n    }\n  }, {\n    key: "create",\n    value: function create() {\n      var config = {\n        grid: this.getHexagonGrid(this),\n        width: this.width,\n        height: this.height,\n        wrap: false\n      };\n      this.board = new gameBoard_GameBoard(this, config);\n      this.loadBoardState();\n      var cursors = this.input.keyboard.createCursorKeys();\n      this.cameraController = new phaser_default.a.Cameras.Controls.SmoothedKeyControl({\n        camera: this.cameras.main,\n        left: cursors.left,\n        right: cursors.right,\n        up: cursors.up,\n        down: cursors.down,\n        zoomIn: this.input.keyboard.addKey(phaser_default.a.Input.Keyboard.KeyCodes.MINUS),\n        zoomOut: this.input.keyboard.addKey(phaser_default.a.Input.Keyboard.KeyCodes.PLUS),\n        acceleration: 0.09,\n        drag: 0.003,\n        maxSpeed: 0.5\n      });\n      var maxSize = this.board.getWorldSize();\n      var minXY = this.board.getWorldCameraOrigin();\n      this.cameraController.camera.setBounds(minXY.x, minXY.y, maxSize.x, maxSize.y + 300);\n    }\n  }, {\n    key: "update",\n    value: function update(time, delta) {\n      _get(gameScene_getPrototypeOf(GameScene.prototype), "update", this).call(this, time, delta);\n\n      this.cameraController.update(delta);\n      this.cameraController.camera.setZoom(MathUtility.clamp(this.cameraController.camera.zoom, 3, 1));\n    }\n  }, {\n    key: "loadBoardState",\n    value: function loadBoardState() {\n      var _this2 = this;\n\n      this.board.removeAllChess(true);\n      this.board.unSelect();\n      this.phaserGameUnitPool.forEach(function (phaserGameUnit) {\n        phaserGameUnit.destroy();\n      });\n      this.phaserGameUnitPool = [];\n      this.board.forEachTileXY(function (tileXY, board) {\n        var location = {\n          x: tileXY.x,\n          y: tileXY.y\n        };\n\n        var unit = _this2.gameManager.getUnitAt(location);\n\n        if (unit) {\n          var unitType = unit.name;\n          var phaserUnit = unitType == fighterUnit_FighterUnit.prototype.constructor.name ? new PhaserFighterUnit(_this2, location, unit) : unitType == speederUnit_SpeederUnit.prototype.constructor.name ? new PhaserSpeederUnit(_this2, location, unit) : unitType == destoyerUnit_DestroyerUnit.prototype.constructor.name ? new PhaserDestroyerUnit(_this2, location, unit) : unitType == mainBaseUnit_MainBaseUnit.prototype.constructor.name ? new PhaserMainBaseUnit(_this2, location, unit) : null;\n          var unitHealthBar = new HealthBar(_this2, phaserUnit);\n\n          _this2.phaserGameUnitPool.push(phaserUnit);\n\n          _this2.phaserGameUnitPool.push(unitHealthBar.bar);\n        }\n      }, this);\n    }\n  }, {\n    key: "getHexagonGrid",\n    value: function getHexagonGrid(scene) {\n      var staggeraxis = "x";\n      var staggerindex = "odd";\n      var grid = scene.rexBoard.add.hexagonGrid({\n        x: 60,\n        y: 60,\n        size: 60,\n        staggeraxis: staggeraxis,\n        staggerindex: staggerindex\n      });\n      return grid;\n    }\n  }, {\n    key: "getBoard",\n    value: function getBoard() {\n      return this.board;\n    }\n  }], [{\n    key: "getSceneName",\n    value: function getSceneName() {\n      return "GameScene";\n    }\n  }]);\n\n  return GameScene;\n}(phaser_default.a.Scene);\n\n\n// CONCATENATED MODULE: ./src/client/resources/images/uiselector.png\n/* harmony default export */ var uiselector = (__webpack_require__.p + "assets/uiselector.png");\n// CONCATENATED MODULE: ./src/client/game/scene/ui.ts\nfunction ui_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { ui_typeof = function _typeof(obj) { return typeof obj; }; } else { ui_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return ui_typeof(obj); }\n\nfunction ui_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction ui_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ui_createClass(Constructor, protoProps, staticProps) { if (protoProps) ui_defineProperties(Constructor.prototype, protoProps); if (staticProps) ui_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ui_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ui_setPrototypeOf(subClass, superClass); }\n\nfunction ui_setPrototypeOf(o, p) { ui_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ui_setPrototypeOf(o, p); }\n\nfunction ui_createSuper(Derived) { var hasNativeReflectConstruct = ui_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = ui_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = ui_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return ui_possibleConstructorReturn(this, result); }; }\n\nfunction ui_possibleConstructorReturn(self, call) { if (call && (ui_typeof(call) === "object" || typeof call === "function")) { return call; } return ui_assertThisInitialized(self); }\n\nfunction ui_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction ui_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ui_getPrototypeOf(o) { ui_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ui_getPrototypeOf(o); }\n\nfunction ui_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nvar ui_UI = /*#__PURE__*/function (_Phaser$Scene) {\n  ui_inherits(UI, _Phaser$Scene);\n\n  var _super = ui_createSuper(UI);\n\n  function UI(width, height, theGame) {\n    var _this;\n\n    ui_classCallCheck(this, UI);\n\n    var config = {\n      active: false\n    };\n    _this = _super.call(this, config);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "width", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "height", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "board", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "theGame", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "rect", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "minX", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "minY", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "maxX", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "maxY", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "selectedX", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "selectedY", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "runInitFlag", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "unitSelected", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "theWord", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "unitPictureMap", void 0);\n\n    ui_defineProperty(ui_assertThisInitialized(_this), "selectedUnitPicture", void 0);\n\n    _this.width = width;\n    _this.height = height;\n    _this.theGame = theGame;\n    _this.runInitFlag = false;\n    _this.displayStats = _this.displayStats.bind(ui_assertThisInitialized(_this));\n    return _this;\n  }\n\n  ui_createClass(UI, [{\n    key: "preload",\n    value: function preload() {\n      this.load.image("fighter1", fighter);\n      this.load.image("enemyFighter1", enemyfighter);\n      this.load.image("speeder1", speeder);\n      this.load.image("enemySpeeder1", enemyspeeder);\n      this.load.image("destroyer1", destroyer);\n      this.load.image("enemyDestroyer1", enemydestroyer);\n      this.load.image("UIbackground", uiselector);\n    }\n  }, {\n    key: "create",\n    value: function create() {\n      var _this2 = this;\n\n      // area where the UI is\n      var mainWidth = this.cameras.main.width;\n      var mainHeight = this.cameras.main.height;\n      this.rect = this.add.rectangle(0, mainHeight, mainWidth * 2, mainHeight / 3, 0x6666ff); // defining the dimensions we are operating in\n\n      this.minX = 0;\n      this.minY = this.rect.getTopLeft().y;\n      this.maxX = this.rect.getBottomRight().x;\n      this.maxY = this.rect.getBottomRight().y;\n      this.rect.destroy(); // add place for text\n\n      var uiBackground = this.add.image(350, this.minY, "UIbackground");\n      uiBackground.scale = 1.75;\n      this.theWord = this.add.text(300, this.minY - 90, "");\n      this.theWord.setStroke("black", 2);\n      this.rect.destroy();\n      this.theWord.setColor("cyan");\n      this.theWord.setFontSize(100); // making the pictures for the ui\n\n      var fighterUnit1 = this.add.image(130, mainHeight - 150, "fighter1");\n      fighterUnit1.setVisible(false);\n      var enemyFighter1 = this.add.image(100, 100, "enemyFighter1");\n      enemyFighter1.setVisible(false);\n      var speeder1 = this.add.image(130, mainHeight - 170, "speeder1");\n      speeder1.setVisible(false);\n      var enemySpeeder1 = this.add.image(100, 100, "enemySpeeder1");\n      enemySpeeder1.setVisible(false);\n      var destroyer1 = this.add.image(130, mainHeight - 170, "destroyer1");\n      destroyer1.setVisible(false);\n      var enemyDestroyer1 = this.add.image(100, 100, "enemyDestroyer1");\n      enemyDestroyer1.setVisible(false);\n      this.selectedUnitPicture = enemyDestroyer1;\n      this.unitPictureMap = {\n        fighter1: fighterUnit1,\n        enemyFighter1: enemyFighter1,\n        speeder1: speeder1,\n        enemySpeeder1: enemySpeeder1,\n        destroyer1: destroyer1,\n        enemyDestroyer1: enemyDestroyer1\n      };\n      Object.keys(this.unitPictureMap).forEach(function (element) {\n        _this2.unitPictureMap[element].scale = 2;\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      var _this3 = this;\n\n      if (!this.runInitFlag && this.theGame.board) {\n        this.runInitFlag = true;\n        this.board = this.theGame.board; //process board here\n\n        this.board.setInteractive().on("tiledown", function (pointer, tileXY) {\n          _this3.displayStats();\n\n          _this3.displayPicture();\n        });\n      }\n    }\n  }, {\n    key: "displayStats",\n    value: function displayStats() {\n      var stats = this.board.selected[1].gameUnit.unitStats;\n      var speed = stats.moveSpeed;\n      var movesRemaining = stats.movesRemaining;\n      var maxHealth = stats.maxHealth;\n      var health = stats.health;\n      var range = stats.range;\n      var damage = stats.damage;\n      var statSheet = "Energy: " + movesRemaining.toString() + "/" + speed.toString() + "\\n";\n      statSheet += "Health: " + maxHealth + "/" + health + "\\n";\n      statSheet += "Range: " + range + "\\n";\n      statSheet += "Damage: " + damage + "\\n";\n      statSheet += "Ammo Remaining: " + (this.board.selected[1].gameUnit.specialMoves.length - this.board.selected[1].gameUnit.specialsUsed.length);\n      this.theWord.setText(statSheet);\n      this.theWord.setFont("30px Arial");\n      this.board.selected[1].once("drawHealth", this.displayStats);\n    }\n  }, {\n    key: "displayPicture",\n    value: function displayPicture() {\n      this.selectedUnitPicture.setVisible(false);\n      this.unitPictureMap[this.formatPicName(this.board.selected[1].gameUnit.name)].setVisible(true);\n      this.selectedUnitPicture = this.unitPictureMap[this.formatPicName(this.board.selected[1].gameUnit.name)];\n    }\n  }, {\n    key: "formatPicName",\n    value: function formatPicName(unitName) {\n      var firstLetter = unitName.charAt(0);\n      firstLetter = firstLetter.toLowerCase();\n      var nameLength = unitName.length;\n      var fileName = firstLetter + unitName.substring(1, nameLength - 4) + "1";\n      return fileName;\n    }\n  }]);\n\n  return UI;\n}(Phaser.Scene);\n\n\n// CONCATENATED MODULE: ./src/client/game/tbsfartsGame.ts\nfunction tbsfartsGame_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { tbsfartsGame_typeof = function _typeof(obj) { return typeof obj; }; } else { tbsfartsGame_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return tbsfartsGame_typeof(obj); }\n\nfunction tbsfartsGame_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction tbsfartsGame_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) tbsfartsGame_setPrototypeOf(subClass, superClass); }\n\nfunction tbsfartsGame_setPrototypeOf(o, p) { tbsfartsGame_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return tbsfartsGame_setPrototypeOf(o, p); }\n\nfunction tbsfartsGame_createSuper(Derived) { var hasNativeReflectConstruct = tbsfartsGame_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = tbsfartsGame_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = tbsfartsGame_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return tbsfartsGame_possibleConstructorReturn(this, result); }; }\n\nfunction tbsfartsGame_possibleConstructorReturn(self, call) { if (call && (tbsfartsGame_typeof(call) === "object" || typeof call === "function")) { return call; } return tbsfartsGame_assertThisInitialized(self); }\n\nfunction tbsfartsGame_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction tbsfartsGame_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction tbsfartsGame_getPrototypeOf(o) { tbsfartsGame_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return tbsfartsGame_getPrototypeOf(o); }\n\nfunction tbsfartsGame_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n/**\r\n * Class that represents the Turn-Based Science Fiction Action Real-Time Strategy Game (tbsfarts)\r\n */\n\nvar tbsfartsGame_TbsfartsGame = /*#__PURE__*/function (_Phaser$Game) {\n  tbsfartsGame_inherits(TbsfartsGame, _Phaser$Game);\n\n  var _super = tbsfartsGame_createSuper(TbsfartsGame);\n\n  function TbsfartsGame(client) {\n    var _this;\n\n    tbsfartsGame_classCallCheck(this, TbsfartsGame);\n\n    var config = {\n      type: phaser_default.a.AUTO,\n      width: 1600,\n      height: 900,\n      scale: {\n        mode: phaser_default.a.Scale.FIT,\n        autoCenter: phaser_default.a.Scale.CENTER_BOTH\n      },\n      parent: "divId",\n      dom: {\n        createContainer: true\n      },\n      physics: {\n        "default": "arcade"\n      }\n    };\n    _this = _super.call(this, config);\n\n    tbsfartsGame_defineProperty(tbsfartsGame_assertThisInitialized(_this), "client", void 0);\n\n    _this.client = client;\n    var height = client.gameManager.boardState.length;\n    var width = client.gameManager.boardState[0].length;\n\n    _this.canvas.oncontextmenu = function (e) {\n      e.preventDefault();\n    };\n\n    var gameScene = new gameScene_GameScene(width, height, client, client.gameManager);\n\n    _this.scene.add(gameScene_GameScene.getSceneName(), gameScene, true);\n\n    _this.scene.add("UI", new ui_UI(30, 30, gameScene), true);\n\n    return _this;\n  }\n\n  return TbsfartsGame;\n}(phaser_default.a.Game);\n\n\n// CONCATENATED MODULE: ./src/shared/game/manager/mapManager.ts\nfunction mapManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction mapManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction mapManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) mapManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) mapManager_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction mapManager_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar mapManager_MapManager = /*#__PURE__*/function () {\n  function MapManager() {\n    mapManager_classCallCheck(this, MapManager);\n  }\n\n  mapManager_createClass(MapManager, null, [{\n    key: "getMaps",\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    value: function getMaps() {\n      return [{\n        id: "1",\n        name: "Faceoff"\n      }, {\n        id: "2",\n        name: "Edgeworld"\n      }];\n    }\n  }, {\n    key: "getMapFromId",\n    value: function getMapFromId(mapId, players) {\n      return MapManager.mapStringToMap(MapManager.mapIdToString[mapId]);\n    }\n  }, {\n    key: "mapStringToMap",\n    value: function mapStringToMap(mapString) {\n      var gameUnitArray = [];\n      var currentIndex = 0,\n          endIndex;\n      endIndex = mapString.indexOf(" ", currentIndex);\n      var gameWidth = parseInt(mapString.substr(currentIndex, endIndex - currentIndex));\n      currentIndex = endIndex + 1;\n      endIndex = mapString.indexOf(" ", currentIndex);\n      var gameHeight = parseInt(mapString.substr(currentIndex, endIndex - currentIndex));\n      currentIndex = endIndex + 1;\n\n      for (var y = 0; y < gameHeight; y++) {\n        gameUnitArray.push([]);\n\n        for (var x = 0; x < gameWidth; x++) {\n          endIndex = mapString.indexOf(" ", currentIndex);\n          var fullUnitStr = mapString.substr(currentIndex, endIndex - currentIndex);\n          var justNumbers = fullUnitStr.replace(/\\D/g, "");\n          var justLetters = fullUnitStr.replace(/[0-9]/g, "");\n          var unitConstructor = MapManager.stringToUnitContructor[justLetters];\n\n          if (unitConstructor) {\n            gameUnitArray[y].push(unitConstructor(parseInt(justNumbers), justNumbers, {\n              x: x,\n              y: y\n            }));\n          } else {\n            gameUnitArray[y].push(null);\n          }\n\n          currentIndex = endIndex + 1;\n        }\n      }\n\n      logger(JSON.stringify(gameUnitArray), this.constructor.name, LOG_LEVEL.DEBUG);\n      return gameUnitArray;\n    }\n  }]);\n\n  return MapManager;\n}();\n\nmapManager_defineProperty(mapManager_MapManager, "unitToString", {\n  FighterUnit: "f",\n  "null": "n"\n});\n\nmapManager_defineProperty(mapManager_MapManager, "stringToUnitContructor", {\n  f: function f(controller, team, location) {\n    return new fighterUnit_FighterUnit(controller, team, location);\n  },\n  s: function s(controller, team, location) {\n    return new speederUnit_SpeederUnit(controller, team, location);\n  },\n  d: function d(controller, team, location) {\n    return new destoyerUnit_DestroyerUnit(controller, team, location);\n  },\n  b: function b(controller, team, location) {\n    return new mainBaseUnit_MainBaseUnit(controller, team, location);\n  },\n  n: null\n});\n\nmapManager_defineProperty(mapManager_MapManager, "mapIdToString", {\n  "1": "15 8 " + "n n n n n n n n n n n n n n n " + "f0 s0 f0 n n n n n n n n n n n n " + "n n n n n n n n n f1 s1 f1 n n n " + "b0 n n d0 n n n n n n d1 n n n b1 " + "n n n n n n n n n n n n n n n " + "f0 s0 f0 n n n n n n n n n n n n " + "n n n n n n n n n f1 s1 f1 n n n " + "n n n n n n n n n n n n n n n ",\n  "2": "20 15 " + "n n n n n n n n n n n n n n n n n n n d0 " + "n b0 n s0 s0 n n n n n n n n n n n n n n n " + "n n n d0 n n n n n n n n n n n n n n n n " + "n n s0 n n n n n n n n n n n n n n n n n " + "n s0 n n f0 n n n n n n n n n n n n n n n " + "n n n n n n n n n n n n n n n n n n n n " + "n n n n n n n n n n n n n n n n n n n n " + "n n n n n n n n n n n n n n n n n n n n " + "n n n n n n n n n n n n n n n n n n n n " + "n n n n n n n n n n n n n n n n n n n n " + "n n n n n n n n n n n n n n f1 n n n n s1 " + "n n n n n n n n n n n n n n n n n n s1 n " + "n n n n n n n n n n n n n n n n n d1 n n " + "n n n n n n n n n n n n f1 n n s1 s1 n b1 n " + "d1 n n n n n n n n n n n n n n n n n n n "\n});\n\n\n// CONCATENATED MODULE: ./src/frontend/lobby/LobbyComponent.tsx\nfunction LobbyComponent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { LobbyComponent_typeof = function _typeof(obj) { return typeof obj; }; } else { LobbyComponent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return LobbyComponent_typeof(obj); }\n\nfunction LobbyComponent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction LobbyComponent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction LobbyComponent_createClass(Constructor, protoProps, staticProps) { if (protoProps) LobbyComponent_defineProperties(Constructor.prototype, protoProps); if (staticProps) LobbyComponent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction LobbyComponent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) LobbyComponent_setPrototypeOf(subClass, superClass); }\n\nfunction LobbyComponent_setPrototypeOf(o, p) { LobbyComponent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return LobbyComponent_setPrototypeOf(o, p); }\n\nfunction LobbyComponent_createSuper(Derived) { var hasNativeReflectConstruct = LobbyComponent_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = LobbyComponent_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = LobbyComponent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return LobbyComponent_possibleConstructorReturn(this, result); }; }\n\nfunction LobbyComponent_possibleConstructorReturn(self, call) { if (call && (LobbyComponent_typeof(call) === "object" || typeof call === "function")) { return call; } return LobbyComponent_assertThisInitialized(self); }\n\nfunction LobbyComponent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction LobbyComponent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction LobbyComponent_getPrototypeOf(o) { LobbyComponent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return LobbyComponent_getPrototypeOf(o); }\n\n\n\n\nvar LobbyComponent_LobbyComponent = /*#__PURE__*/function (_React$Component) {\n  LobbyComponent_inherits(LobbyComponent, _React$Component);\n\n  var _super = LobbyComponent_createSuper(LobbyComponent);\n\n  function LobbyComponent(props) {\n    var _this;\n\n    LobbyComponent_classCallCheck(this, LobbyComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  LobbyComponent_createClass(LobbyComponent, [{\n    key: "render",\n    value: function render() {\n      var _MapManager$getMaps$f,\n          _this2 = this;\n\n      var mapName = (_MapManager$getMaps$f = mapManager_MapManager.getMaps().find(function (map) {\n        return map.id == _this2.props.lobby.settings.mapId;\n      })) === null || _MapManager$getMaps$f === void 0 ? void 0 : _MapManager$getMaps$f.name;\n      return /*#__PURE__*/react["createElement"](react["Fragment"], null, /*#__PURE__*/react["createElement"]("tr", {\n        className: this.props.joined ? "table-primary" : "",\n        onClick: function onClick() {\n          _this2.props.onClickJoin(_this2.props.index);\n        }\n      }, /*#__PURE__*/react["createElement"]("th", {\n        scope: "row"\n      }, this.props.index + 1), /*#__PURE__*/react["createElement"]("td", null, this.props.lobby.settings.lobbyName), /*#__PURE__*/react["createElement"]("td", null, this.props.lobby.players.length, " / 2"), /*#__PURE__*/react["createElement"]("td", null, this.props.lobby.id), /*#__PURE__*/react["createElement"]("td", null, this.props.lobby.lobbyLeader), /*#__PURE__*/react["createElement"]("td", null, mapName)));\n    }\n  }]);\n\n  return LobbyComponent;\n}(react["Component"]);\n\n/* harmony default export */ var lobby_LobbyComponent = (LobbyComponent_LobbyComponent);\n// CONCATENATED MODULE: ./src/frontend/lobby/LobbyCreatorComponent.tsx\nfunction LobbyCreatorComponent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { LobbyCreatorComponent_typeof = function _typeof(obj) { return typeof obj; }; } else { LobbyCreatorComponent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return LobbyCreatorComponent_typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { LobbyCreatorComponent_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction LobbyCreatorComponent_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction LobbyCreatorComponent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction LobbyCreatorComponent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction LobbyCreatorComponent_createClass(Constructor, protoProps, staticProps) { if (protoProps) LobbyCreatorComponent_defineProperties(Constructor.prototype, protoProps); if (staticProps) LobbyCreatorComponent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction LobbyCreatorComponent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) LobbyCreatorComponent_setPrototypeOf(subClass, superClass); }\n\nfunction LobbyCreatorComponent_setPrototypeOf(o, p) { LobbyCreatorComponent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return LobbyCreatorComponent_setPrototypeOf(o, p); }\n\nfunction LobbyCreatorComponent_createSuper(Derived) { var hasNativeReflectConstruct = LobbyCreatorComponent_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = LobbyCreatorComponent_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = LobbyCreatorComponent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return LobbyCreatorComponent_possibleConstructorReturn(this, result); }; }\n\nfunction LobbyCreatorComponent_possibleConstructorReturn(self, call) { if (call && (LobbyCreatorComponent_typeof(call) === "object" || typeof call === "function")) { return call; } return LobbyCreatorComponent_assertThisInitialized(self); }\n\nfunction LobbyCreatorComponent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction LobbyCreatorComponent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction LobbyCreatorComponent_getPrototypeOf(o) { LobbyCreatorComponent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return LobbyCreatorComponent_getPrototypeOf(o); }\n\n\n\n\nvar LobbyCreatorComponent_LobbyCreatorComponent = /*#__PURE__*/function (_React$Component) {\n  LobbyCreatorComponent_inherits(LobbyCreatorComponent, _React$Component);\n\n  var _super = LobbyCreatorComponent_createSuper(LobbyCreatorComponent);\n\n  function LobbyCreatorComponent(props) {\n    var _this;\n\n    LobbyCreatorComponent_classCallCheck(this, LobbyCreatorComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      settings: {\n        maxPlayersPerTeam: 1,\n        numTeams: 2,\n        turnTime: 0,\n        mapId: "1",\n        lobbyName: "".concat(_this.props.username, "\'s Lobby")\n      }\n    };\n    _this.setLobbyName = _this.setLobbyName.bind(LobbyCreatorComponent_assertThisInitialized(_this));\n    _this.setMapId = _this.setMapId.bind(LobbyCreatorComponent_assertThisInitialized(_this));\n    return _this;\n  }\n\n  LobbyCreatorComponent_createClass(LobbyCreatorComponent, [{\n    key: "setLobbyName",\n    value: function setLobbyName(lobbyName) {\n      this.setState(function (prevState, _props) {\n        return {\n          settings: _objectSpread(_objectSpread({}, prevState.settings), {}, {\n            lobbyName: lobbyName\n          })\n        };\n      });\n    }\n  }, {\n    key: "setMapId",\n    value: function setMapId(mapId) {\n      this.setState(function (prevState, _props) {\n        return {\n          settings: _objectSpread(_objectSpread({}, prevState.settings), {}, {\n            mapId: mapId\n          })\n        };\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var maps = mapManager_MapManager.getMaps();\n      return /*#__PURE__*/react["createElement"]("div", {\n        className: "col-4 text-center justify-content-center",\n        style: {\n          backgroundColor: "white"\n        }\n      }, /*#__PURE__*/react["createElement"]("form", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this2.props.createLobby(_this2.state.settings);\n        }\n      }, /*#__PURE__*/react["createElement"]("div", {\n        className: "form-group"\n      }, /*#__PURE__*/react["createElement"]("label", {\n        htmlFor: "lobbyName"\n      }, "Lobby Name:"), /*#__PURE__*/react["createElement"]("input", {\n        type: "text",\n        id: "lobbyName",\n        value: this.state.settings.lobbyName,\n        className: "form-control",\n        onChange: function onChange(event) {\n          _this2.setLobbyName(event.target.value);\n        }\n      })), /*#__PURE__*/react["createElement"]("div", {\n        className: "form-group"\n      }, /*#__PURE__*/react["createElement"]("label", {\n        htmlFor: "map"\n      }, "Map:"), /*#__PURE__*/react["createElement"]("select", {\n        id: "map",\n        value: this.state.settings.mapId,\n        className: "form-control",\n        onChange: function onChange(event) {\n          _this2.setMapId(event.target.value);\n        }\n      }, maps.map(function (map) {\n        return /*#__PURE__*/react["createElement"]("option", {\n          key: map.id,\n          value: map.id\n        }, map.name);\n      }))), /*#__PURE__*/react["createElement"]("button", {\n        className: "btn btn-primary",\n        type: "submit",\n        value: "Submit"\n      }, "Create Lobby")));\n    }\n  }]);\n\n  return LobbyCreatorComponent;\n}(react["Component"]);\n\n/* harmony default export */ var lobby_LobbyCreatorComponent = (LobbyCreatorComponent_LobbyCreatorComponent);\n// CONCATENATED MODULE: ./src/frontend/lobby/LobbyListComponent.tsx\nfunction LobbyListComponent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { LobbyListComponent_typeof = function _typeof(obj) { return typeof obj; }; } else { LobbyListComponent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return LobbyListComponent_typeof(obj); }\n\nfunction LobbyListComponent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction LobbyListComponent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction LobbyListComponent_createClass(Constructor, protoProps, staticProps) { if (protoProps) LobbyListComponent_defineProperties(Constructor.prototype, protoProps); if (staticProps) LobbyListComponent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction LobbyListComponent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) LobbyListComponent_setPrototypeOf(subClass, superClass); }\n\nfunction LobbyListComponent_setPrototypeOf(o, p) { LobbyListComponent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return LobbyListComponent_setPrototypeOf(o, p); }\n\nfunction LobbyListComponent_createSuper(Derived) { var hasNativeReflectConstruct = LobbyListComponent_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = LobbyListComponent_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = LobbyListComponent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return LobbyListComponent_possibleConstructorReturn(this, result); }; }\n\nfunction LobbyListComponent_possibleConstructorReturn(self, call) { if (call && (LobbyListComponent_typeof(call) === "object" || typeof call === "function")) { return call; } return LobbyListComponent_assertThisInitialized(self); }\n\nfunction LobbyListComponent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction LobbyListComponent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction LobbyListComponent_getPrototypeOf(o) { LobbyListComponent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return LobbyListComponent_getPrototypeOf(o); }\n\nfunction LobbyListComponent_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar LobbyListComponent_LobbyListComponent = /*#__PURE__*/function (_React$Component) {\n  LobbyListComponent_inherits(LobbyListComponent, _React$Component);\n\n  var _super = LobbyListComponent_createSuper(LobbyListComponent);\n\n  function LobbyListComponent(props) {\n    var _this;\n\n    LobbyListComponent_classCallCheck(this, LobbyListComponent);\n\n    _this = _super.call(this, props);\n\n    LobbyListComponent_defineProperty(LobbyListComponent_assertThisInitialized(_this), "interval", void 0);\n\n    _this.state = {\n      lobbyList: []\n    };\n    _this.reloadLobbyList = _this.reloadLobbyList.bind(LobbyListComponent_assertThisInitialized(_this));\n    _this.lobbyButton = _this.lobbyButton.bind(LobbyListComponent_assertThisInitialized(_this));\n    _this.reloadState = _this.reloadState.bind(LobbyListComponent_assertThisInitialized(_this));\n    _this.createLobby = _this.createLobby.bind(LobbyListComponent_assertThisInitialized(_this));\n    _this.interval = setInterval(_this.reloadLobbyList, 2000);\n    return _this;\n  }\n\n  LobbyListComponent_createClass(LobbyListComponent, [{\n    key: "reloadLobbyList",\n    value: function reloadLobbyList() {\n      this.props.client.loadLobbyList(this.reloadState);\n    }\n  }, {\n    key: "reloadState",\n    value: function reloadState() {\n      this.setState({\n        lobbyList: this.props.client.lobbyList\n      });\n    }\n  }, {\n    key: "createLobby",\n    value: function createLobby(settings) {\n      this.props.client.createLobby(settings);\n      this.props.client.addOnServerMessageCallback(messageEnum.GET_LOBBIES, this.reloadState);\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.reloadLobbyList();\n      this.props.client.addOnServerMessageCallback(messageEnum.START_GAME, function () {\n        _this2.props.gameHasLoadedCallback();\n      });\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: "lobbyButton",\n    value: function lobbyButton(lobbyIndex) {\n      var lobby = this.props.client.lobbyList[lobbyIndex];\n      var emptyTeam = parseInt(Object.keys(lobby.playerTeamMap).find(function (teamId) {\n        var teamIdNumber = parseInt(teamId);\n        return Object.keys(lobby.playerTeamMap[teamIdNumber]).length == 0;\n      }));\n      this.props.client.joinLobby(lobby.id, emptyTeam || 0, this.reloadState);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this3 = this,\n          _this$props$client,\n          _this$props$client$lo,\n          _this$props$client2;\n\n      var myLobbyIdx = this.props.client.lobbyList.findIndex(function (value, index) {\n        return value.players.includes(_this3.props.client.userId);\n      });\n      var buttonJSX = /*#__PURE__*/react["createElement"](react["Fragment"], null, myLobbyIdx != -1 ? /*#__PURE__*/react["createElement"]("button", {\n        type: "button",\n        className: "btn btn-primary",\n        onClick: function onClick() {\n          _this3.props.client.leaveLobby(_this3.props.client.lobbyList[myLobbyIdx].id, _this3.reloadState);\n        }\n      }, "Leave Lobby") : /*#__PURE__*/react["createElement"](react["Fragment"], null));\n      var startGameJsx = /*#__PURE__*/react["createElement"](react["Fragment"], null, ((_this$props$client = this.props.client) === null || _this$props$client === void 0 ? void 0 : (_this$props$client$lo = _this$props$client.lobbyList[myLobbyIdx]) === null || _this$props$client$lo === void 0 ? void 0 : _this$props$client$lo.lobbyLeader) == this.props.client.userId && ((_this$props$client2 = this.props.client) === null || _this$props$client2 === void 0 ? void 0 : _this$props$client2.lobbyList[myLobbyIdx].players.length) > 1 ? /*#__PURE__*/react["createElement"]("button", {\n        type: "button",\n        className: "btn btn-success",\n        onClick: function onClick() {\n          _this3.props.client.startGame();\n        }\n      }, "Start Game") : /*#__PURE__*/react["createElement"](react["Fragment"], null, " "), " ");\n      var lobbiesJSX = [];\n      this.state.lobbyList.forEach(function (lobby, index) {\n        lobbiesJSX.push( /*#__PURE__*/react["createElement"](lobby_LobbyComponent, {\n          lobby: lobby,\n          key: index,\n          joined: index == myLobbyIdx,\n          index: index,\n          onClickJoin: _this3.lobbyButton\n        }));\n      });\n      return /*#__PURE__*/react["createElement"](react["Fragment"], null, buttonJSX, startGameJsx, /*#__PURE__*/react["createElement"]("table", {\n        className: "table table-bordered table-hover"\n      }, /*#__PURE__*/react["createElement"]("thead", null, /*#__PURE__*/react["createElement"]("tr", null, /*#__PURE__*/react["createElement"]("th", {\n        scope: "col"\n      }, "#"), /*#__PURE__*/react["createElement"]("th", {\n        scope: "col"\n      }, "Name"), /*#__PURE__*/react["createElement"]("th", {\n        scope: "col"\n      }, "Players"), /*#__PURE__*/react["createElement"]("th", {\n        scope: "col"\n      }, "ID"), /*#__PURE__*/react["createElement"]("th", {\n        scope: "col"\n      }, "Manager"), /*#__PURE__*/react["createElement"]("th", {\n        scope: "col"\n      }, "Map"))), /*#__PURE__*/react["createElement"]("tbody", null, lobbiesJSX)), /*#__PURE__*/react["createElement"]("div", {\n        className: "fixed-bottom"\n      }, /*#__PURE__*/react["createElement"](lobby_LobbyCreatorComponent, {\n        username: this.props.username,\n        createLobby: this.createLobby\n      })));\n    }\n  }]);\n\n  return LobbyListComponent;\n}(react["Component"]);\n\n/* harmony default export */ var lobby_LobbyListComponent = (LobbyListComponent_LobbyListComponent);\n// CONCATENATED MODULE: ./src/frontend/game/GameComponent.tsx\nfunction GameComponent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { GameComponent_typeof = function _typeof(obj) { return typeof obj; }; } else { GameComponent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return GameComponent_typeof(obj); }\n\nfunction GameComponent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction GameComponent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction GameComponent_createClass(Constructor, protoProps, staticProps) { if (protoProps) GameComponent_defineProperties(Constructor.prototype, protoProps); if (staticProps) GameComponent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction GameComponent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) GameComponent_setPrototypeOf(subClass, superClass); }\n\nfunction GameComponent_setPrototypeOf(o, p) { GameComponent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return GameComponent_setPrototypeOf(o, p); }\n\nfunction GameComponent_createSuper(Derived) { var hasNativeReflectConstruct = GameComponent_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = GameComponent_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = GameComponent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return GameComponent_possibleConstructorReturn(this, result); }; }\n\nfunction GameComponent_possibleConstructorReturn(self, call) { if (call && (GameComponent_typeof(call) === "object" || typeof call === "function")) { return call; } return GameComponent_assertThisInitialized(self); }\n\nfunction GameComponent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction GameComponent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction GameComponent_getPrototypeOf(o) { GameComponent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return GameComponent_getPrototypeOf(o); }\n\n\n\n\n\nvar GameComponent_GameComponent = /*#__PURE__*/function (_React$Component) {\n  GameComponent_inherits(GameComponent, _React$Component);\n\n  var _super = GameComponent_createSuper(GameComponent);\n\n  function GameComponent(props) {\n    var _this;\n\n    GameComponent_classCallCheck(this, GameComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasEndedTurn: false\n    };\n    _this.updateEndTurn = _this.updateEndTurn.bind(GameComponent_assertThisInitialized(_this));\n\n    _this.updateEndTurn();\n\n    return _this;\n  }\n\n  GameComponent_createClass(GameComponent, [{\n    key: "updateEndTurn",\n    value: function updateEndTurn() {\n      var _this2 = this;\n\n      this.props.client.addOnServerMessageCallback(messageEnum.END_TURN_SIGNAL, function () {\n        _this2.setState({\n          hasEndedTurn: false\n        });\n\n        logger("Calling end turn", _this2.constructor.name, LOG_LEVEL.DEBUG);\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/react["createElement"](react["Fragment"], null, /*#__PURE__*/react["createElement"]("button", {\n        type: "button",\n        className: "btn btn-primary",\n        onClick: function onClick() {\n          _this3.updateEndTurn();\n\n          _this3.props.client.setEndTurn(!_this3.state.hasEndedTurn);\n\n          _this3.setState({\n            hasEndedTurn: !_this3.state.hasEndedTurn\n          });\n        }\n      }, this.state.hasEndedTurn ? "Unend Turn" : "End Turn"), /*#__PURE__*/react["createElement"]("button", {\n        type: "button",\n        className: "btn btn-warning",\n        onClick: function onClick() {\n          _this3.props.client.resetMoves();\n        }\n      }, "Reset Moves"), /*#__PURE__*/react["createElement"]("button", {\n        type: "button",\n        className: "btn btn-danger",\n        onClick: function onClick() {\n          _this3.props.client.concede();\n        }\n      }, "Concede"));\n    }\n  }]);\n\n  return GameComponent;\n}(react["Component"]);\n\n/* harmony default export */ var game_GameComponent = (GameComponent_GameComponent);\n// CONCATENATED MODULE: ./src/frontend/FrontendAppComponent.tsx\nfunction FrontendAppComponent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { FrontendAppComponent_typeof = function _typeof(obj) { return typeof obj; }; } else { FrontendAppComponent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return FrontendAppComponent_typeof(obj); }\n\nfunction FrontendAppComponent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction FrontendAppComponent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FrontendAppComponent_createClass(Constructor, protoProps, staticProps) { if (protoProps) FrontendAppComponent_defineProperties(Constructor.prototype, protoProps); if (staticProps) FrontendAppComponent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction FrontendAppComponent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) FrontendAppComponent_setPrototypeOf(subClass, superClass); }\n\nfunction FrontendAppComponent_setPrototypeOf(o, p) { FrontendAppComponent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return FrontendAppComponent_setPrototypeOf(o, p); }\n\nfunction FrontendAppComponent_createSuper(Derived) { var hasNativeReflectConstruct = FrontendAppComponent_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = FrontendAppComponent_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = FrontendAppComponent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return FrontendAppComponent_possibleConstructorReturn(this, result); }; }\n\nfunction FrontendAppComponent_possibleConstructorReturn(self, call) { if (call && (FrontendAppComponent_typeof(call) === "object" || typeof call === "function")) { return call; } return FrontendAppComponent_assertThisInitialized(self); }\n\nfunction FrontendAppComponent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction FrontendAppComponent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction FrontendAppComponent_getPrototypeOf(o) { FrontendAppComponent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return FrontendAppComponent_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nvar FrontendAppComponent_FrontendAppComponent = /*#__PURE__*/function (_React$Component) {\n  FrontendAppComponent_inherits(FrontendAppComponent, _React$Component);\n\n  var _super = FrontendAppComponent_createSuper(FrontendAppComponent);\n\n  function FrontendAppComponent(props) {\n    var _this;\n\n    FrontendAppComponent_classCallCheck(this, FrontendAppComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      client: new client_Client(),\n      username: null,\n      errorMessage: null,\n      successMessage: null,\n      game: null\n    };\n\n    _this.state.client.listen();\n\n    _this.handleLoginButton = _this.handleLoginButton.bind(FrontendAppComponent_assertThisInitialized(_this));\n    _this.handleCreateAccountButton = _this.handleCreateAccountButton.bind(FrontendAppComponent_assertThisInitialized(_this));\n    _this.gameHasLoaded = _this.gameHasLoaded.bind(FrontendAppComponent_assertThisInitialized(_this));\n    return _this;\n  }\n\n  FrontendAppComponent_createClass(FrontendAppComponent, [{\n    key: "handleLoginButton",\n    value: function handleLoginButton(username, password) {\n      var _this2 = this;\n\n      if (!this.state.game) {\n        var client = this.state.client;\n        client.addOnServerMessageCallback(messageEnum.LOGIN, function () {\n          if (client.loginStatus == LoginMessageResponseType.SUCCESS) {\n            _this2.setState({\n              username: username,\n              errorMessage: null\n            });\n\n            console.log("login successful"); // if successful gamestate sent over\n\n            if (_this2.state.client.gameManager) {\n              _this2.gameHasLoaded();\n            }\n          } else {\n            _this2.setState({\n              errorMessage: "Username or password is incorrect",\n              successMessage: null\n            });\n          }\n        });\n        client.addOnServerMessageCallback(messageEnum.GAME_HAS_ENDED, function () {\n          _this2.state.game.destroy(true);\n\n          _this2.setState({\n            game: null\n          });\n\n          alert("The Game is over: ".concat(client.gameOverWinner, " has won"));\n        });\n        client.sendLoginAttempt(username, password);\n      }\n    }\n  }, {\n    key: "handleCreateAccountButton",\n    value: function handleCreateAccountButton(username, password) {\n      var _this3 = this;\n\n      var client = this.state.client;\n      client.createAccount(username, password, function () {\n        if (client.loginStatus == LoginMessageResponseType.SUCCESS) {\n          _this3.setState({\n            successMessage: "Account has been successfully created",\n            errorMessage: null\n          });\n        } else {\n          _this3.setState({\n            errorMessage: "Username is taken",\n            successMessage: null\n          });\n        }\n      });\n    }\n  }, {\n    key: "gameHasLoaded",\n    value: function gameHasLoaded() {\n      this.setState({\n        game: new tbsfartsGame_TbsfartsGame(this.state.client)\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var loginJSX = /*#__PURE__*/react["createElement"]("div", {\n        className: "col-6 text-center",\n        style: {\n          backgroundColor: "white"\n        }\n      }, /*#__PURE__*/react["createElement"](login_LoginForm, {\n        sendLoginRequestFunc: this.handleLoginButton,\n        sendCreateAccountRequestFunc: this.handleCreateAccountButton\n      }), this.state.errorMessage ? /*#__PURE__*/react["createElement"]("div", {\n        style: {\n          color: "red"\n        }\n      }, this.state.errorMessage) : /*#__PURE__*/react["createElement"](react["Fragment"], null), this.state.successMessage ? /*#__PURE__*/react["createElement"]("div", {\n        style: {\n          color: "green"\n        }\n      }, this.state.successMessage) : /*#__PURE__*/react["createElement"](react["Fragment"], null));\n      return /*#__PURE__*/react["createElement"]("div", {\n        className: "container-fluid"\n      }, /*#__PURE__*/react["createElement"]("div", {\n        className: "row justify-content-center"\n      }, !this.state.username ? loginJSX : !this.state.game ? /*#__PURE__*/react["createElement"]("div", {\n        style: {\n          backgroundColor: "white"\n        }\n      }, /*#__PURE__*/react["createElement"](lobby_LobbyListComponent, {\n        client: this.state.client,\n        gameHasLoadedCallback: this.gameHasLoaded,\n        username: this.state.username\n      })) :\n      /*#__PURE__*/\n      //Game holder stuff goes here\n      react["createElement"](game_GameComponent, {\n        client: this.state.client\n      })));\n    }\n  }]);\n\n  return FrontendAppComponent;\n}(react["Component"]);\n\n/* harmony default export */ var frontend_FrontendAppComponent = (FrontendAppComponent_FrontendAppComponent);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(19);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/frontend/index.css\nvar frontend = __webpack_require__(35);\n\n// CONCATENATED MODULE: ./src/frontend/index.css\n\n            \n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar frontend_update = injectStylesIntoStyleTag_default()(frontend["a" /* default */], options);\n\n\n\n/* harmony default export */ var src_frontend = (frontend["a" /* default */].locals || {});\n// CONCATENATED MODULE: ./src/frontend/index.tsx\n\n\n\n\nvar title = "React with Webpack and Babel";\nreact_dom_default.a.render( /*#__PURE__*/react_default.a.createElement(frontend_FrontendAppComponent, null), document.getElementById("app"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///101\n')},35:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default.a);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, "body {\\r\\n    background-color: black;\\r\\n    overflow: hidden;\\r\\n}\\r\\n", "",{"version":3,"sources":["webpack://./src/frontend/index.css"],"names":[],"mappings":"AAAA;IACI,uBAAuB;IACvB,gBAAgB;AACpB","sourcesContent":["body {\\r\\n    background-color: black;\\r\\n    overflow: hidden;\\r\\n}\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ __webpack_exports__["a"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZnJvbnRlbmQvaW5kZXguY3NzPzVlN2IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN5SDtBQUM3QjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsc0dBQXFDO0FBQy9GO0FBQ0EsOEJBQThCLFFBQVMsU0FBUyxnQ0FBZ0MseUJBQXlCLEtBQUssV0FBVyx5RkFBeUYsWUFBWSxhQUFhLGdDQUFnQyxnQ0FBZ0MseUJBQXlCLEtBQUssdUJBQXVCO0FBQ2hXO0FBQ2UsZ0ZBQXVCLEVBQUMiLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImJvZHkge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Zyb250ZW5kL2luZGV4LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixnQkFBZ0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///35\n')},6:function(module){eval('module.exports = JSON.parse("{\\"fighter\\":{\\"moveSpeed\\":3,\\"movesRemaining\\":3,\\"maxHealth\\":5,\\"health\\":5,\\"damage\\":2,\\"range\\":2},\\"speeder\\":{\\"moveSpeed\\":7,\\"movesRemaining\\":7,\\"maxHealth\\":3,\\"health\\":3,\\"damage\\":1,\\"range\\":1},\\"destroyer\\":{\\"moveSpeed\\":1,\\"movesRemaining\\":1,\\"maxHealth\\":8,\\"health\\":8,\\"damage\\":3,\\"range\\":3},\\"mainbase\\":{\\"moveSpeed\\":0,\\"movesRemaining\\":0,\\"maxHealth\\":15,\\"health\\":15,\\"damage\\":0,\\"range\\":0}}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI2LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n')},88:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd3MgKGlnbm9yZWQpPzVhMWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiODguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///88\n")}});